# 1 "arch/arm/dts/.stm32mp157c-ev1.dtb.pre.tmp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "././include/linux/kconfig.h" 1



# 1 "include/generated/autoconf.h" 1
# 5 "././include/linux/kconfig.h" 2
# 1 "<command-line>" 2
# 1 "arch/arm/dts/.stm32mp157c-ev1.dtb.pre.tmp"





/dts-v1/;

# 1 "arch/arm/dts/stm32mp157c-ed1.dts" 1





/dts-v1/;

# 1 "arch/arm/dts/stm32mp157.dtsi" 1






# 1 "arch/arm/dts/stm32mp153.dtsi" 1






# 1 "arch/arm/dts/stm32mp151.dtsi" 1





# 1 "./arch/arm/dts/include/dt-bindings/interrupt-controller/arm-gic.h" 1







# 1 "./arch/arm/dts/include/dt-bindings/interrupt-controller/irq.h" 1
# 9 "./arch/arm/dts/include/dt-bindings/interrupt-controller/arm-gic.h" 2
# 7 "arch/arm/dts/stm32mp151.dtsi" 2
# 1 "./arch/arm/dts/include/dt-bindings/clock/stm32mp1-clks.h" 1
# 8 "arch/arm/dts/stm32mp151.dtsi" 2
# 1 "./arch/arm/dts/include/dt-bindings/gpio/gpio.h" 1
# 9 "arch/arm/dts/stm32mp151.dtsi" 2
# 1 "./arch/arm/dts/include/dt-bindings/reset/stm32mp1-resets.h" 1
# 10 "arch/arm/dts/stm32mp151.dtsi" 2
# 1 "./arch/arm/dts/include/dt-bindings/thermal/thermal.h" 1
# 11 "arch/arm/dts/stm32mp151.dtsi" 2


/ {
 #address-cells = <1>;
 #size-cells = <1>;

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   compatible = "arm,cortex-a7";
   device_type = "cpu";
   reg = <0>;
   clocks = <&scmi0_clk 7>;
   clock-names = "cpu";
   operating-points-v2 = <&cpu0_opp_table>;
   nvmem-cells = <&part_number_otp>;
   nvmem-cell-names = "part_number";
   #cooling-cells = <2>;
  };
 };

 cpu0_opp_table: cpu0-opp-table {
  compatible = "operating-points-v2";
  opp-shared;
 };

 arm-pmu {
  compatible = "arm,cortex-a7-pmu";
  interrupts = <0 200 4>;
  interrupt-affinity = <&cpu0>;
  interrupt-parent = <&intc>;
 };

 scmi_sram: sram@2ffff000 {
  compatible = "mmio-sram";
  reg = <0x2ffff000 0x1000>;
  #address-cells = <1>;
  #size-cells = <1>;
  ranges = <0 0x2ffff000 0x1000>;

  scmi0_shm: scmi_shm@0 {
   reg = <0 0x80>;
  };

  scmi1_shm: scmi_shm@200 {
   reg = <0x200 0x80>;
  };
 };

 scmi0_mbox: mailbox-0 {
  #mbox-cells = <0>;
  compatible = "arm,smc-mbox";
  arm,func-id = <0x82002000>;
 };

 scmi1_mbox: mailbox-1 {
  #mbox-cells = <0>;
  compatible = "arm,smc-mbox";
  arm,func-id = <0x82002001>;
 };

 firmware {
  scmi0: scmi-0 {
   compatible = "arm,scmi";
   #address-cells = <1>;
   #size-cells = <0>;

   mboxes = <&scmi0_mbox 0>;
   mbox-names = "txrx";
   shmem = <&scmi0_shm>;

   scmi0_clk: protocol@14 {
    reg = <0x14>;
    #clock-cells = <1>;
   };
   scmi0_reset: protocol@16 {
    reg = <0x16>;
    #reset-cells = <1>;
   };
  };

  scmi1: scmi-1 {
   compatible = "arm,scmi";
   #address-cells = <1>;
   #size-cells = <0>;

   status = "disabled";
   mboxes = <&scmi1_mbox 0>;
   mbox-names = "txrx";
   shmem = <&scmi1_shm>;

   scmi1_clk: protocol@14 {
    reg = <0x14>;
    #clock-cells = <1>;
   };
  };

  optee: optee {
   compatible = "linaro,optee-tz";
   method = "smc";
   status = "disabled";
  };
 };

 psci {
  compatible = "arm,psci-1.0";
  method = "smc";
 };

 intc: interrupt-controller@a0021000 {
  compatible = "arm,cortex-a7-gic";
  #interrupt-cells = <3>;
  interrupt-controller;
  reg = <0xa0021000 0x1000>,
        <0xa0022000 0x2000>;
 };

 timer {
  compatible = "arm,armv7-timer";
  interrupts = <1 13 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 14 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 11 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 10 ((((1 << (4)) - 1) << 8) | 8)>;
  interrupt-parent = <&intc>;
  always-on;
 };

 thermal-zones {
  cpu_thermal: cpu-thermal {
   polling-delay-passive = <0>;
   polling-delay = <0>;
   thermal-sensors = <&dts>;

   trips {
    cpu-crit {
     temperature = <120000>;
     hysteresis = <0>;
     type = "critical";
    };
   };

   cooling-maps {
   };
  };
 };

 booster: regulator-booster {
  compatible = "st,stm32mp1-booster";
  st,syscfg = <&syscfg>;
  status = "disabled";
 };

 pm_domain {
  #address-cells = <1>;
  #size-cells = <0>;
  compatible = "st,stm32mp157c-pd";

  pd_core_ret: core-ret-power-domain@1 {
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <1>;
   #power-domain-cells = <0>;
   label = "CORE-RETENTION";

   pd_core: core-power-domain@2 {
    reg = <2>;
    #power-domain-cells = <0>;
    label = "CORE";
   };
  };
 };

 reboot {
  compatible = "syscon-reboot";
  regmap = <&rcc>;
  offset = <0x404>;
  mask = <0x1>;
 };

 soc {
  compatible = "simple-bus";
  #address-cells = <1>;
  #size-cells = <1>;
  interrupt-parent = <&intc>;
  ranges;

  sram: sram@10000000 {
   compatible = "mmio-sram";
   reg = <0x10000000 0x60000>;
   #address-cells = <1>;
   #size-cells = <1>;
   ranges = <0 0x10000000 0x60000>;
  };

  timers2: timer@40000000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 197>;
   clock-names = "int";
   dmas = <&dmamux1 18 0x400 0x80000001>,
          <&dmamux1 19 0x400 0x80000001>,
          <&dmamux1 20 0x400 0x80000001>,
          <&dmamux1 21 0x400 0x80000001>,
          <&dmamux1 22 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4", "up";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@1 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <1>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  timers3: timer@40001000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 198>;
   clock-names = "int";
   dmas = <&dmamux1 23 0x400 0x80000001>,
          <&dmamux1 24 0x400 0x80000001>,
          <&dmamux1 25 0x400 0x80000001>,
          <&dmamux1 26 0x400 0x80000001>,
          <&dmamux1 27 0x400 0x80000001>,
          <&dmamux1 28 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4", "up", "trig";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@2 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <2>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  timers4: timer@40002000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc 199>;
   clock-names = "int";
   dmas = <&dmamux1 29 0x400 0x80000001>,
          <&dmamux1 30 0x400 0x80000001>,
          <&dmamux1 31 0x400 0x80000001>,
          <&dmamux1 32 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@3 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <3>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  timers5: timer@40003000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40003000 0x400>;
   clocks = <&rcc 200>;
   clock-names = "int";
   dmas = <&dmamux1 55 0x400 0x80000001>,
          <&dmamux1 56 0x400 0x80000001>,
          <&dmamux1 57 0x400 0x80000001>,
          <&dmamux1 58 0x400 0x80000001>,
          <&dmamux1 59 0x400 0x80000001>,
          <&dmamux1 60 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4", "up", "trig";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@4 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <4>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  timers6: timer@40004000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40004000 0x400>;
   clocks = <&rcc 201>;
   clock-names = "int";
   dmas = <&dmamux1 69 0x400 0x80000001>;
   dma-names = "up";
   status = "disabled";

   timer@5 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <5>;
    status = "disabled";
   };
  };

  timers7: timer@40005000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 202>;
   clock-names = "int";
   dmas = <&dmamux1 70 0x400 0x80000001>;
   dma-names = "up";
   status = "disabled";

   timer@6 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <6>;
    status = "disabled";
   };
  };

  timers12: timer@40006000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40006000 0x400>;
   clocks = <&rcc 203>;
   clock-names = "int";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@11 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <11>;
    status = "disabled";
   };
  };

  timers13: timer@40007000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40007000 0x400>;
   clocks = <&rcc 204>;
   clock-names = "int";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@12 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <12>;
    status = "disabled";
   };
  };

  timers14: timer@40008000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x40008000 0x400>;
   clocks = <&rcc 205>;
   clock-names = "int";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@13 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <13>;
    status = "disabled";
   };
  };

  lptimer1: timer@40009000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-lptimer";
   reg = <0x40009000 0x400>;
   clocks = <&rcc 143>;
   clock-names = "mux";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm-lp";
    #pwm-cells = <3>;
    status = "disabled";
   };

   trigger@0 {
    compatible = "st,stm32-lptimer-trigger";
    reg = <0>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-lptimer-counter";
    status = "disabled";
   };
  };

  spi2: spi@4000b000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x4000b000 0x400>;
   interrupts = <0 36 4>;
   clocks = <&rcc 131>;
   resets = <&rcc 19467>;
   dmas = <&dmamux1 39 0x400 0x01>,
          <&dmamux1 40 0x400 0x01>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  i2s2: audio-controller@4000b000 {
   compatible = "st,stm32h7-i2s";
   #sound-dai-cells = <0>;
   reg = <0x4000b000 0x400>;
   interrupts = <0 36 4>;
   dmas = <&dmamux1 39 0x400 0x01>,
          <&dmamux1 40 0x400 0x01>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  spi3: spi@4000c000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x4000c000 0x400>;
   interrupts = <0 51 4>;
   clocks = <&rcc 132>;
   resets = <&rcc 19468>;
   dmas = <&dmamux1 61 0x400 0x01>,
          <&dmamux1 62 0x400 0x01>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  i2s3: audio-controller@4000c000 {
   compatible = "st,stm32h7-i2s";
   #sound-dai-cells = <0>;
   reg = <0x4000c000 0x400>;
   interrupts = <0 51 4>;
   dmas = <&dmamux1 61 0x400 0x01>,
          <&dmamux1 62 0x400 0x01>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  spdifrx: audio-controller@4000d000 {
   compatible = "st,stm32h7-spdifrx";
   #sound-dai-cells = <0>;
   reg = <0x4000d000 0x400>;
   clocks = <&rcc 129>;
   clock-names = "kclk";
   interrupts = <0 97 4>;
   dmas = <&dmamux1 93 0x400 0x01>,
          <&dmamux1 94 0x400 0x01>;
   dma-names = "rx", "rx-ctrl";
   status = "disabled";
  };

  usart2: serial@4000e000 {
   compatible = "st,stm32h7-uart";
   reg = <0x4000e000 0x400>;
   interrupts-extended = <&exti 27 4>;
   clocks = <&rcc 149>;
   resets = <&rcc 19470>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 43 0x400 0x5>,
          <&dmamux1 44 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  usart3: serial@4000f000 {
   compatible = "st,stm32h7-uart";
   reg = <0x4000f000 0x400>;
   interrupts-extended = <&exti 28 4>;
   clocks = <&rcc 150>;
   resets = <&rcc 19471>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 45 0x400 0x5>,
          <&dmamux1 46 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  uart4: serial@40010000 {
   compatible = "st,stm32h7-uart";
   reg = <0x40010000 0x400>;
   interrupts-extended = <&exti 30 4>;
   clocks = <&rcc 151>;
   resets = <&rcc 19472>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 63 0x400 0x5>,
          <&dmamux1 64 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  uart5: serial@40011000 {
   compatible = "st,stm32h7-uart";
   reg = <0x40011000 0x400>;
   interrupts-extended = <&exti 31 4>;
   clocks = <&rcc 152>;
   resets = <&rcc 19473>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 65 0x400 0x5>,
          <&dmamux1 66 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  i2c1: i2c@40012000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x40012000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 21 4>,
           <&intc 0 32 4>;
   clocks = <&rcc 137>;
   resets = <&rcc 19477>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&dmamux1 33 0x400 0x80000001>,
          <&dmamux1 34 0x400 0x80000001>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x1>;
   wakeup-source;
   status = "disabled";
  };

  i2c2: i2c@40013000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x40013000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 22 4>,
           <&intc 0 34 4>;
   clocks = <&rcc 138>;
   resets = <&rcc 19478>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&dmamux1 35 0x400 0x80000001>,
          <&dmamux1 36 0x400 0x80000001>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x2>;
   wakeup-source;
   status = "disabled";
  };

  i2c3: i2c@40014000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x40014000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 23 4>,
           <&intc 0 73 4>;
   clocks = <&rcc 139>;
   resets = <&rcc 19479>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&dmamux1 73 0x400 0x80000001>,
          <&dmamux1 74 0x400 0x80000001>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x4>;
   wakeup-source;
   status = "disabled";
  };

  i2c5: i2c@40015000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x40015000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 25 4>,
           <&intc 0 108 4>;
   clocks = <&rcc 141>;
   resets = <&rcc 19480>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&dmamux1 115 0x400 0x80000001>,
          <&dmamux1 116 0x400 0x80000001>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x10>;
   wakeup-source;
   status = "disabled";
  };

  cec: cec@40016000 {
   compatible = "st,stm32-cec";
   reg = <0x40016000 0x400>;
   interrupts = <0 94 4>;
   clocks = <&rcc 136>, <&scmi0_clk 3>;
   clock-names = "cec", "hdmi-cec";
   status = "disabled";
  };

  dac: dac@40017000 {
   compatible = "st,stm32h7-dac-core";
   reg = <0x40017000 0x400>;
   clocks = <&rcc 30>;
   clock-names = "pclk";
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";

   dac1: dac@1 {
    compatible = "st,stm32-dac";
    #io-channel-cells = <1>;
    reg = <1>;
    status = "disabled";
   };

   dac2: dac@2 {
    compatible = "st,stm32-dac";
    #io-channel-cells = <1>;
    reg = <2>;
    status = "disabled";
   };
  };

  uart7: serial@40018000 {
   compatible = "st,stm32h7-uart";
   reg = <0x40018000 0x400>;
   interrupts-extended = <&exti 32 4>;
   clocks = <&rcc 154>;
   resets = <&rcc 19474>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 79 0x400 0x5>,
          <&dmamux1 80 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  uart8: serial@40019000 {
   compatible = "st,stm32h7-uart";
   reg = <0x40019000 0x400>;
   interrupts-extended = <&exti 33 4>;
   clocks = <&rcc 155>;
   resets = <&rcc 19475>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 81 0x400 0x5>,
          <&dmamux1 82 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  timers1: timer@44000000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x44000000 0x400>;
   clocks = <&rcc 206>;
   clock-names = "int";
   dmas = <&dmamux1 11 0x400 0x80000001>,
          <&dmamux1 12 0x400 0x80000001>,
          <&dmamux1 13 0x400 0x80000001>,
          <&dmamux1 14 0x400 0x80000001>,
          <&dmamux1 15 0x400 0x80000001>,
          <&dmamux1 16 0x400 0x80000001>,
          <&dmamux1 17 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4",
        "up", "trig", "com";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@0 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <0>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  timers8: timer@44001000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x44001000 0x400>;
   clocks = <&rcc 207>;
   clock-names = "int";
   dmas = <&dmamux1 47 0x400 0x80000001>,
          <&dmamux1 48 0x400 0x80000001>,
          <&dmamux1 49 0x400 0x80000001>,
          <&dmamux1 50 0x400 0x80000001>,
          <&dmamux1 51 0x400 0x80000001>,
          <&dmamux1 52 0x400 0x80000001>,
          <&dmamux1 53 0x400 0x80000001>;
   dma-names = "ch1", "ch2", "ch3", "ch4",
        "up", "trig", "com";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@7 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <7>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-timer-counter";
    status = "disabled";
   };
  };

  usart6: serial@44003000 {
   compatible = "st,stm32h7-uart";
   reg = <0x44003000 0x400>;
   interrupts-extended = <&exti 29 4>;
   clocks = <&rcc 153>;
   resets = <&rcc 19533>;
   wakeup-source;
   power-domains = <&pd_core>;
   dmas = <&dmamux1 71 0x400 0x5>,
          <&dmamux1 72 0x400 0x1>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  spi1: spi@44004000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x44004000 0x400>;
   interrupts = <0 35 4>;
   clocks = <&rcc 130>;
   resets = <&rcc 19528>;
   dmas = <&dmamux1 37 0x400 0x01>,
          <&dmamux1 38 0x400 0x01>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  i2s1: audio-controller@44004000 {
   compatible = "st,stm32h7-i2s";
   #sound-dai-cells = <0>;
   reg = <0x44004000 0x400>;
   interrupts = <0 35 4>;
   dmas = <&dmamux1 37 0x400 0x01>,
          <&dmamux1 38 0x400 0x01>;
   dma-names = "rx", "tx";
   status = "disabled";
  };

  spi4: spi@44005000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x44005000 0x400>;
   interrupts = <0 84 4>;
   clocks = <&rcc 133>;
   resets = <&rcc 19529>;
   dmas = <&dmamux1 83 0x400 0x01>,
          <&dmamux1 84 0x400 0x01>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  timers15: timer@44006000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x44006000 0x400>;
   clocks = <&rcc 208>;
   clock-names = "int";
   dmas = <&dmamux1 105 0x400 0x80000001>,
          <&dmamux1 106 0x400 0x80000001>,
          <&dmamux1 107 0x400 0x80000001>,
          <&dmamux1 108 0x400 0x80000001>;
   dma-names = "ch1", "up", "trig", "com";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@14 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <14>;
    status = "disabled";
   };
  };

  timers16: timer@44007000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x44007000 0x400>;
   clocks = <&rcc 209>;
   clock-names = "int";
   dmas = <&dmamux1 109 0x400 0x80000001>,
          <&dmamux1 110 0x400 0x80000001>;
   dma-names = "ch1", "up";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };
   timer@15 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <15>;
    status = "disabled";
   };
  };

  timers17: timer@44008000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-timers";
   reg = <0x44008000 0x400>;
   clocks = <&rcc 210>;
   clock-names = "int";
   dmas = <&dmamux1 111 0x400 0x80000001>,
          <&dmamux1 112 0x400 0x80000001>;
   dma-names = "ch1", "up";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    #pwm-cells = <3>;
    status = "disabled";
   };

   timer@16 {
    compatible = "st,stm32h7-timer-trigger";
    reg = <16>;
    status = "disabled";
   };
  };

  spi5: spi@44009000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x44009000 0x400>;
   interrupts = <0 85 4>;
   clocks = <&rcc 134>;
   resets = <&rcc 19530>;
   dmas = <&dmamux1 85 0x400 0x01>,
          <&dmamux1 86 0x400 0x01>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  sai1: sai@4400a000 {
   compatible = "st,stm32h7-sai";
   #address-cells = <1>;
   #size-cells = <1>;
   ranges = <0 0x4400a000 0x400>;
   reg = <0x4400a000 0x4>, <0x4400a3f0 0x10>;
   interrupts = <0 87 4>;
   resets = <&rcc 19536>;
   status = "disabled";

   sai1a: audio-controller@4400a004 {
    #sound-dai-cells = <0>;

    compatible = "st,stm32-sai-sub-a";
    reg = <0x4 0x1c>;
    clocks = <&rcc 158>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 87 0x400 0x01>;
    status = "disabled";
   };

   sai1b: audio-controller@4400a024 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-b";
    reg = <0x24 0x1c>;
    clocks = <&rcc 158>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 88 0x400 0x01>;
    status = "disabled";
   };
  };

  sai2: sai@4400b000 {
   compatible = "st,stm32h7-sai";
   #address-cells = <1>;
   #size-cells = <1>;
   ranges = <0 0x4400b000 0x400>;
   reg = <0x4400b000 0x4>, <0x4400b3f0 0x10>;
   interrupts = <0 91 4>;
   resets = <&rcc 19537>;
   status = "disabled";

   sai2a: audio-controller@4400b004 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-a";
    reg = <0x4 0x1c>;
    clocks = <&rcc 159>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 89 0x400 0x01>;
    status = "disabled";
   };

   sai2b: audio-controller@4400b024 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-b";
    reg = <0x24 0x1c>;
    clocks = <&rcc 159>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 90 0x400 0x01>;
    status = "disabled";
   };
  };

  sai3: sai@4400c000 {
   compatible = "st,stm32h7-sai";
   #address-cells = <1>;
   #size-cells = <1>;
   ranges = <0 0x4400c000 0x400>;
   reg = <0x4400c000 0x4>, <0x4400c3f0 0x10>;
   interrupts = <0 114 4>;
   resets = <&rcc 19538>;
   status = "disabled";

   sai3a: audio-controller@4400c004 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-a";
    reg = <0x04 0x1c>;
    clocks = <&rcc 160>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 113 0x400 0x01>;
    status = "disabled";
   };

   sai3b: audio-controller@4400c024 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-b";
    reg = <0x24 0x1c>;
    clocks = <&rcc 160>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 114 0x400 0x01>;
    status = "disabled";
   };
  };

  dfsdm: dfsdm@4400d000 {
   compatible = "st,stm32mp1-dfsdm";
   reg = <0x4400d000 0x800>;
   clocks = <&rcc 156>;
   clock-names = "dfsdm";
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";

   dfsdm0: filter@0 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <0>;
    interrupts = <0 110 4>;
    dmas = <&dmamux1 101 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };

   dfsdm1: filter@1 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <1>;
    interrupts = <0 111 4>;
    dmas = <&dmamux1 102 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };

   dfsdm2: filter@2 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <2>;
    interrupts = <0 112 4>;
    dmas = <&dmamux1 103 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };

   dfsdm3: filter@3 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <3>;
    interrupts = <0 113 4>;
    dmas = <&dmamux1 104 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };

   dfsdm4: filter@4 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <4>;
    interrupts = <0 115 4>;
    dmas = <&dmamux1 91 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };

   dfsdm5: filter@5 {
    compatible = "st,stm32-dfsdm-adc";
    #io-channel-cells = <1>;
    reg = <5>;
    interrupts = <0 126 4>;
    dmas = <&dmamux1 92 0x400 0x01>;
    dma-names = "rx";
    status = "disabled";
   };
  };

  dma1: dma@48000000 {
   compatible = "st,stm32-dma";
   reg = <0x48000000 0x400>;
   interrupts = <0 11 4>,
         <0 12 4>,
         <0 13 4>,
         <0 14 4>,
         <0 15 4>,
         <0 16 4>,
         <0 17 4>,
         <0 47 4>;
   clocks = <&rcc 71>;
   resets = <&rcc 19648>;
   #dma-cells = <4>;
   st,mem2mem;
   dma-requests = <8>;
   dmas = <&mdma1 0 0x3 0x1200000a 0x48000008 0x00000020 1>,
          <&mdma1 1 0x3 0x1200000a 0x48000008 0x00000800 1>,
          <&mdma1 2 0x3 0x1200000a 0x48000008 0x00200000 1>,
          <&mdma1 3 0x3 0x1200000a 0x48000008 0x08000000 1>,
          <&mdma1 4 0x3 0x1200000a 0x4800000C 0x00000020 1>,
          <&mdma1 5 0x3 0x1200000a 0x4800000C 0x00000800 1>,
          <&mdma1 6 0x3 0x1200000a 0x4800000C 0x00200000 1>,
          <&mdma1 7 0x3 0x1200000a 0x4800000C 0x08000000 1>;
   dma-names = "ch0", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7";
  };

  dma2: dma@48001000 {
   compatible = "st,stm32-dma";
   reg = <0x48001000 0x400>;
   interrupts = <0 56 4>,
         <0 57 4>,
         <0 58 4>,
         <0 59 4>,
         <0 60 4>,
         <0 68 4>,
         <0 69 4>,
         <0 70 4>;
   clocks = <&rcc 72>;
   resets = <&rcc 19649>;
   #dma-cells = <4>;
   st,mem2mem;
   dma-requests = <8>;
   dmas = <&mdma1 8 0x3 0x1200000a 0x48001008 0x00000020 1>,
          <&mdma1 9 0x3 0x1200000a 0x48001008 0x00000800 1>,
          <&mdma1 10 0x3 0x1200000a 0x48001008 0x00200000 1>,
          <&mdma1 11 0x3 0x1200000a 0x48001008 0x08000000 1>,
          <&mdma1 12 0x3 0x1200000a 0x4800100C 0x00000020 1>,
          <&mdma1 13 0x3 0x1200000a 0x4800100C 0x00000800 1>,
          <&mdma1 14 0x3 0x1200000a 0x4800100C 0x00200000 1>,
          <&mdma1 15 0x3 0x1200000a 0x4800100C 0x08000000 1>;
   dma-names = "ch0", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7";
  };

  dmamux1: dma-router@48002000 {
   compatible = "st,stm32h7-dmamux";
   reg = <0x48002000 0x40>;
   #dma-cells = <3>;
   dma-requests = <128>;
   dma-masters = <&dma1 &dma2>;
   dma-channels = <16>;
   clocks = <&rcc 73>;
   resets = <&rcc 19650>;
  };

  adc: adc@48003000 {
   compatible = "st,stm32mp1-adc-core";
   reg = <0x48003000 0x400>;
   interrupts = <0 18 4>,
         <0 90 4>;
   clocks = <&rcc 74>, <&rcc 162>;
   clock-names = "bus", "adc";
   interrupt-controller;
   st,syscfg = <&syscfg>;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   #size-cells = <0>;
   status = "disabled";

   adc1: adc@0 {
    compatible = "st,stm32mp1-adc";
    #io-channel-cells = <1>;
    reg = <0x0>;
    interrupt-parent = <&adc>;
    interrupts = <0>;
    dmas = <&dmamux1 9 0x400 0x80000001>;
    dma-names = "rx";
    status = "disabled";
   };

   adc2: adc@100 {
    compatible = "st,stm32mp1-adc";
    #io-channel-cells = <1>;
    reg = <0x100>;
    interrupt-parent = <&adc>;
    interrupts = <1>;
    dmas = <&dmamux1 10 0x400 0x80000001>;
    dma-names = "rx";
    status = "disabled";
   };
  };

  sdmmc3: sdmmc@48004000 {
   compatible = "arm,pl18x", "arm,primecell";
   arm,primecell-periphid = <0x00253180>;
   reg = <0x48004000 0x400>, <0x48005000 0x400>;
   interrupts = <0 137 4>;
   interrupt-names = "cmd_irq";
   clocks = <&rcc 120>;
   clock-names = "apb_pclk";
   resets = <&rcc 19664>;
   cap-sd-highspeed;
   cap-mmc-highspeed;
   max-frequency = <120000000>;
   status = "disabled";
  };

  usbotg_hs: usb-otg@49000000 {
   compatible = "st,stm32mp1-hsotg", "snps,dwc2";
   reg = <0x49000000 0x10000>;
   clocks = <&rcc 166>;
   clock-names = "otg";
   resets = <&rcc 19656>;
   reset-names = "dwc2";
   interrupts-extended = <&exti 44 4>;
   g-rx-fifo-size = <512>;
   g-np-tx-fifo-size = <32>;
   g-tx-fifo-size = <256 16 16 16 16 16 16 16>;
   dr_mode = "otg";
   usb33d-supply = <&usb33>;
   power-domains = <&pd_core>;
   wakeup-source;
   status = "disabled";
  };

  hsem: hwspinlock@4c000000 {
   compatible = "st,stm32-hwspinlock";
   #hwlock-cells = <2>;
   reg = <0x4c000000 0x400>;
   clocks = <&rcc 82>;
   clock-names = "hsem";
  };

  ipcc: mailbox@4c001000 {
   compatible = "st,stm32mp1-ipcc";
   #mbox-cells = <1>;
   reg = <0x4c001000 0x400>;
   st,proc-id = <0>;
   interrupts-extended =
    <&exti 61 1>,
    <&intc 0 101 4>;
   interrupt-names = "rx", "tx";
   clocks = <&rcc 83>;
   wakeup-source;
   power-domains = <&pd_core>;
   status = "disabled";
  };

  dcmi: dcmi@4c006000 {
   compatible = "st,stm32-dcmi";
   reg = <0x4c006000 0x400>;
   interrupts = <0 78 4>;
   resets = <&rcc 19712>;
   clocks = <&rcc 77>;
   clock-names = "mclk";
   dmas = <&dmamux1 75 0x400 0xe0000001>;
   dma-names = "tx";
   status = "disabled";
  };

  rcc: rcc@50000000 {
   compatible = "st,stm32mp1-rcc-secure", "st,stm32mp1-rcc", "syscon";
   reg = <0x50000000 0x1000>;
   #clock-cells = <1>;
   #reset-cells = <1>;
   interrupts = <0 5 4>;

   clock-names = "hse", "hsi", "csi", "lse", "lsi";
   clocks = <&scmi0_clk 0>,
     <&scmi0_clk 1>,
     <&scmi0_clk 2>,
     <&scmi0_clk 3>,
     <&scmi0_clk 4>;
  };

  pwr_regulators: pwr@50001000 {
   compatible = "st,stm32mp1,pwr-reg";
   reg = <0x50001000 0x10>;
   st,tzcr = <&rcc 0x0 0x1>;

   reg11: reg11 {
    regulator-name = "reg11";
    regulator-min-microvolt = <1100000>;
    regulator-max-microvolt = <1100000>;
   };

   reg18: reg18 {
    regulator-name = "reg18";
    regulator-min-microvolt = <1800000>;
    regulator-max-microvolt = <1800000>;
   };

   usb33: usb33 {
    regulator-name = "usb33";
    regulator-min-microvolt = <3300000>;
    regulator-max-microvolt = <3300000>;
   };
  };

  pwr_mcu: pwr_mcu@50001014 {
   compatible = "syscon";
   reg = <0x50001014 0x4>;
  };

  pwr_irq: pwr@50001020 {
   compatible = "st,stm32mp1-pwr";
   reg = <0x50001020 0x100>;
   interrupts = <0 149 4>;
   interrupt-controller;
   #interrupt-cells = <3>;

   wakeup-gpios = <&gpioa 0 0>,
           <&gpioa 2 0>,
           <&gpioc 13 0>,
           <&gpioi 8 0>,
           <&gpioi 11 0>,
           <&gpioc 1 0>;
  };

  exti: interrupt-controller@5000d000 {
   compatible = "st,stm32mp1-exti", "syscon";
   interrupt-controller;
   #interrupt-cells = <2>;
   reg = <0x5000d000 0x400>;
   hwlocks = <&hsem 1 1>;





   exti_pwr: exti-pwr {
    interrupt-controller;
    #interrupt-cells = <2>;
    interrupt-parent = <&pwr_irq>;
    st,irq-number = <6>;
   };
  };

  syscfg: syscon@50020000 {
   compatible = "st,stm32mp157-syscfg", "syscon";
   reg = <0x50020000 0x400>;
   clocks = <&rcc 51>;
  };

  lptimer2: timer@50021000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-lptimer";
   reg = <0x50021000 0x400>;
   clocks = <&rcc 144>;
   clock-names = "mux";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm-lp";
    #pwm-cells = <3>;
    status = "disabled";
   };

   trigger@1 {
    compatible = "st,stm32-lptimer-trigger";
    reg = <1>;
    status = "disabled";
   };

   counter {
    compatible = "st,stm32-lptimer-counter";
    status = "disabled";
   };
  };

  lptimer3: timer@50022000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32-lptimer";
   reg = <0x50022000 0x400>;
   clocks = <&rcc 145>;
   clock-names = "mux";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm-lp";
    #pwm-cells = <3>;
    status = "disabled";
   };

   trigger@2 {
    compatible = "st,stm32-lptimer-trigger";
    reg = <2>;
    status = "disabled";
   };
  };

  lptimer4: timer@50023000 {
   compatible = "st,stm32-lptimer";
   reg = <0x50023000 0x400>;
   clocks = <&rcc 146>;
   clock-names = "mux";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm-lp";
    #pwm-cells = <3>;
    status = "disabled";
   };
  };

  lptimer5: timer@50024000 {
   compatible = "st,stm32-lptimer";
   reg = <0x50024000 0x400>;
   clocks = <&rcc 147>;
   clock-names = "mux";
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm-lp";
    #pwm-cells = <3>;
    status = "disabled";
   };
  };

  vrefbuf: vrefbuf@50025000 {
   compatible = "st,stm32-vrefbuf";
   reg = <0x50025000 0x8>;
   regulator-min-microvolt = <1500000>;
   regulator-max-microvolt = <2500000>;
   clocks = <&rcc 52>;
   status = "disabled";
  };

  sai4: sai@50027000 {
   compatible = "st,stm32h7-sai";
   #address-cells = <1>;
   #size-cells = <1>;
   ranges = <0 0x50027000 0x400>;
   reg = <0x50027000 0x4>, <0x500273f0 0x10>;
   interrupts = <0 146 4>;
   resets = <&rcc 19592>;
   status = "disabled";

   sai4a: audio-controller@50027004 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-a";
    reg = <0x04 0x1c>;
    clocks = <&rcc 161>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 99 0x400 0x01>;
    status = "disabled";
   };

   sai4b: audio-controller@50027024 {
    #sound-dai-cells = <0>;
    compatible = "st,stm32-sai-sub-b";
    reg = <0x24 0x1c>;
    clocks = <&rcc 161>;
    clock-names = "sai_ck";
    dmas = <&dmamux1 100 0x400 0x01>;
    status = "disabled";
   };
  };

  dts: thermal@50028000 {
   compatible = "st,stm32-thermal";
   reg = <0x50028000 0x100>;
   interrupts = <0 147 4>;
   clocks = <&rcc 53>;
   clock-names = "pclk";
   #thermal-sensor-cells = <0>;
   status = "disabled";
  };

  hdp: hdp@5002a000 {
   compatible = "st,stm32mp1-hdp";
   reg = <0x5002a000 0x400>;
   clocks = <&rcc 55>;
   clock-names = "hdp";
   status = "disabled";
  };

  hash1: hash@54002000 {
   compatible = "st,stm32f756-hash";
   reg = <0x54002000 0x400>;
   interrupts = <0 80 4>;
   clocks = <&scmi0_clk 12>;
   resets = <&scmi0_reset 7>;
   dmas = <&mdma1 31 0x2 0x1000A02 0x0 0x0 0x0>;
   dma-names = "in";
   dma-maxburst = <2>;
   status = "disabled";
  };

  rng1: rng@54003000 {
   compatible = "st,stm32-rng";
   reg = <0x54003000 0x400>;
   clocks = <&scmi0_clk 16>;
   resets = <&scmi0_reset 8>;
   status = "disabled";
  };

  mdma1: dma@58000000 {
   compatible = "st,stm32h7-mdma";
   reg = <0x58000000 0x1000>;
   interrupts = <0 122 4>;
   clocks = <&rcc 100>;
   resets = <&scmi0_reset 9>;
   #dma-cells = <6>;
   dma-channels = <32>;
   dma-requests = <48>;
  };

  fmc: nand-controller@58002000 {
   compatible = "st,stm32mp15-fmc2";
   reg = <0x58002000 0x1000>,
         <0x80000000 0x1000>,
         <0x88010000 0x1000>,
         <0x88020000 0x1000>,
         <0x81000000 0x1000>,
         <0x89010000 0x1000>,
         <0x89020000 0x1000>;
   interrupts = <0 48 4>;
   dmas = <&mdma1 20 0x2 0x12000a02 0x0 0x0 0x0>,
          <&mdma1 20 0x2 0x12000a08 0x0 0x0 0x0>,
          <&mdma1 21 0x2 0x12000a0a 0x0 0x0 0x0>;
   dma-names = "tx", "rx", "ecc";
   clocks = <&rcc 121>;
   resets = <&rcc 3276>;
   status = "disabled";
  };

  qspi: spi@58003000 {
   compatible = "st,stm32f469-qspi";
   reg = <0x58003000 0x1000>, <0x70000000 0x10000000>;
   reg-names = "qspi", "qspi_mm";
   interrupts = <0 92 4>;
   dmas = <&mdma1 22 0x2 0x100002 0x0 0x0 0x0>,
          <&mdma1 22 0x2 0x100008 0x0 0x0 0x0>;
   dma-names = "tx", "rx";
   clocks = <&rcc 122>;
   resets = <&rcc 3278>;
   status = "disabled";
  };

  sdmmc1: sdmmc@58005000 {
   compatible = "arm,pl18x", "arm,primecell";
   arm,primecell-periphid = <0x00253180>;
   reg = <0x58005000 0x1000>, <0x58006000 0x1000>;
   interrupts = <0 49 4>;
   interrupt-names = "cmd_irq";
   clocks = <&rcc 118>;
   clock-names = "apb_pclk";
   resets = <&rcc 3280>;
   cap-sd-highspeed;
   cap-mmc-highspeed;
   max-frequency = <120000000>;
   status = "disabled";
  };

  sdmmc2: sdmmc@58007000 {
   compatible = "arm,pl18x", "arm,primecell";
   arm,primecell-periphid = <0x00253180>;
   reg = <0x58007000 0x1000>, <0x58008000 0x1000>;
   interrupts = <0 124 4>;
   interrupt-names = "cmd_irq";
   clocks = <&rcc 119>;
   clock-names = "apb_pclk";
   resets = <&rcc 3281>;
   cap-sd-highspeed;
   cap-mmc-highspeed;
   max-frequency = <120000000>;
   status = "disabled";
  };

  crc1: crc@58009000 {
   compatible = "st,stm32f7-crc";
   reg = <0x58009000 0x400>;
   clocks = <&rcc 110>;
   status = "disabled";
  };

  stmmac_axi_config_0: stmmac-axi-config {
   snps,wr_osr_lmt = <0x7>;
   snps,rd_osr_lmt = <0x7>;
   snps,blen = <0 0 0 0 16 8 4>;
  };

  ethernet0: ethernet@5800a000 {
   compatible = "st,stm32mp1-dwmac", "snps,dwmac-4.20a";
   reg = <0x5800a000 0x2000>;
   reg-names = "stmmaceth";
   interrupts-extended = <&intc 0 61 4>,
           <&exti 70 4>;
   interrupt-names = "macirq",
       "eth_wake_irq";
   clock-names = "stmmaceth",
          "mac-clk-tx",
          "mac-clk-rx",
          "ethstp";
   clocks = <&rcc 105>,
     <&rcc 103>,
     <&rcc 104>,
     <&rcc 112>;
   st,syscon = <&syscfg 0x4>;
   snps,mixed-burst;
   snps,pbl = <2>;
   snps,en-tx-lpi-clockgating;
   snps,axi-config = <&stmmac_axi_config_0>;
   snps,tso;
   power-domains = <&pd_core>;
   status = "disabled";
  };

  usbh_ohci: usbh-ohci@5800c000 {
   compatible = "generic-ohci";
   reg = <0x5800c000 0x1000>;
   clocks = <&rcc 111>;
   resets = <&rcc 3288>;
   interrupts = <0 74 4>;
   status = "disabled";
  };

  usbh_ehci: usbh-ehci@5800d000 {
   compatible = "generic-ehci";
   reg = <0x5800d000 0x1000>;
   clocks = <&rcc 111>;
   resets = <&rcc 3288>;
   interrupts-extended = <&exti 43 4>;
   companion = <&usbh_ohci>;
   power-domains = <&pd_core>;
   wakeup-source;
   status = "disabled";
  };

  ltdc: display-controller@5a001000 {
   compatible = "st,stm32-ltdc";
   reg = <0x5a001000 0x400>;
   interrupts = <0 88 4>,
         <0 89 4>;
   clocks = <&rcc 167>;
   clock-names = "lcd";
   resets = <&rcc 3072>;
   status = "disabled";
  };

  iwdg2: watchdog@5a002000 {
   compatible = "st,stm32mp1-iwdg";
   reg = <0x5a002000 0x400>;
   clocks = <&rcc 58>, <&scmi0_clk 4>;
   clock-names = "pclk", "lsi";
   status = "disabled";
  };

  usbphyc: usbphyc@5a006000 {
   #address-cells = <1>;
   #size-cells = <0>;
   #clock-cells = <0>;
   compatible = "st,stm32mp1-usbphyc";
   reg = <0x5a006000 0x1000>;
   clocks = <&rcc 127>;
   resets = <&rcc 3088>;
   vdda1v1-supply = <&reg11>;
   vdda1v8-supply = <&reg18>;
   status = "disabled";

   usbphyc_port0: usb-phy@0 {
    #phy-cells = <0>;
    reg = <0>;
   };

   usbphyc_port1: usb-phy@1 {
    #phy-cells = <1>;
    reg = <1>;
   };
  };

  ddrperfm: perf@5a007000 {
   compatible = "st,stm32-ddr-pmu";
   reg = <0x5a007000 0x400>;
   clocks = <&rcc 231>, <&scmi0_clk 6>;
   clock-names = "bus", "ddr";
   resets = <&rcc 3080>;
  };

  usart1: serial@5c000000 {
   compatible = "st,stm32h7-uart";
   reg = <0x5c000000 0x400>;
   interrupts-extended = <&exti 26 4>;
   clocks = <&scmi0_clk 20>;
   resets = <&scmi0_reset 3>;
   wakeup-source;
   power-domains = <&pd_core>;
   status = "disabled";
  };

  spi6: spi@5c001000 {
   #address-cells = <1>;
   #size-cells = <0>;
   compatible = "st,stm32h7-spi";
   reg = <0x5c001000 0x400>;
   interrupts = <0 86 4>;
   clocks = <&scmi0_clk 19>;
   resets = <&scmi0_reset 0>;
   dmas = <&mdma1 34 0x0 0x40008 0x0 0x0 0x0>,
          <&mdma1 35 0x0 0x40002 0x0 0x0 0x0>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   status = "disabled";
  };

  i2c4: i2c@5c002000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x5c002000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 24 4>,
           <&intc 0 96 4>;
   clocks = <&scmi0_clk 13>;
   resets = <&scmi0_reset 1>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&mdma1 36 0x0 0x40008 0x0 0x0 0>,
          <&mdma1 37 0x0 0x40002 0x0 0x0 0>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x8>;
   wakeup-source;
   status = "disabled";
  };

  rtc: rtc@5c004000 {
   compatible = "st,stm32mp1-rtc";
   reg = <0x5c004000 0x400>;
   clocks = <&scmi0_clk 18>,
     <&scmi0_clk 17>;
   clock-names = "pclk", "rtc_ck";
   interrupts-extended = <&exti 19 4>;
   status = "disabled";
  };

  bsec: nvmem@5c005000 {
   compatible = "st,stm32mp15-bsec";
   reg = <0x5c005000 0x400>;
   #address-cells = <1>;
   #size-cells = <1>;

   part_number_otp: part_number_otp@4 {
    reg = <0x4 0x1>;
   };
   ts_cal1: calib@5c {
    reg = <0x5c 0x2>;
   };
   ts_cal2: calib@5e {
    reg = <0x5e 0x2>;
   };
  };

  i2c6: i2c@5c009000 {
   compatible = "st,stm32mp15-i2c";
   reg = <0x5c009000 0x400>;
   interrupt-names = "event", "error";
   interrupts-extended = <&exti 54 4>,
           <&intc 0 136 4>;
   clocks = <&scmi0_clk 14>;
   resets = <&scmi0_reset 2>;
   #address-cells = <1>;
   #size-cells = <0>;
   dmas = <&mdma1 38 0x0 0x40008 0x0 0x0 0>,
          <&mdma1 39 0x0 0x40002 0x0 0x0 0>;
   dma-names = "rx", "tx";
   power-domains = <&pd_core>;
   st,syscfg-fmp = <&syscfg 0x4 0x20>;
   wakeup-source;
   status = "disabled";
  };

  tamp: tamp@5c00a000 {
   compatible = "simple-bus", "syscon", "simple-mfd";
   reg = <0x5c00a000 0x400>;

   reboot-mode {
    compatible = "syscon-reboot-mode";
    offset = <0x150>;
    mask = <0xff>;
    mode-normal = <0>;
    mode-fastboot = <0x1>;
    mode-recovery = <0x2>;
    mode-stm32cubeprogrammer = <0x3>;
    mode-ums_mmc0 = <0x10>;
    mode-ums_mmc1 = <0x11>;
    mode-ums_mmc2 = <0x12>;
   };
  };





  pinctrl: pin-controller@50002000 {
   #address-cells = <1>;
   #size-cells = <1>;
   compatible = "st,stm32mp157-pinctrl";
   ranges = <0 0x50002000 0xa400>;
   interrupt-parent = <&exti>;
   st,syscfg = <&exti 0x60 0xff>;
   hwlocks = <&hsem 0 1>;
   pins-are-numbered;

   gpioa: gpio@50002000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x0 0x400>;
    clocks = <&rcc 84>;
    st,bank-name = "GPIOA";
    status = "disabled";
   };

   gpiob: gpio@50003000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x1000 0x400>;
    clocks = <&rcc 85>;
    st,bank-name = "GPIOB";
    status = "disabled";
   };

   gpioc: gpio@50004000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x2000 0x400>;
    clocks = <&rcc 86>;
    st,bank-name = "GPIOC";
    status = "disabled";
   };

   gpiod: gpio@50005000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x3000 0x400>;
    clocks = <&rcc 87>;
    st,bank-name = "GPIOD";
    status = "disabled";
   };

   gpioe: gpio@50006000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x4000 0x400>;
    clocks = <&rcc 88>;
    st,bank-name = "GPIOE";
    status = "disabled";
   };

   gpiof: gpio@50007000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x5000 0x400>;
    clocks = <&rcc 89>;
    st,bank-name = "GPIOF";
    status = "disabled";
   };

   gpiog: gpio@50008000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x6000 0x400>;
    clocks = <&rcc 90>;
    st,bank-name = "GPIOG";
    status = "disabled";
   };

   gpioh: gpio@50009000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x7000 0x400>;
    clocks = <&rcc 91>;
    st,bank-name = "GPIOH";
    status = "disabled";
   };

   gpioi: gpio@5000a000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x8000 0x400>;
    clocks = <&rcc 92>;
    st,bank-name = "GPIOI";
    status = "disabled";
   };

   gpioj: gpio@5000b000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0x9000 0x400>;
    clocks = <&rcc 93>;
    st,bank-name = "GPIOJ";
    status = "disabled";
   };

   gpiok: gpio@5000c000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0xa000 0x400>;
    clocks = <&rcc 94>;
    st,bank-name = "GPIOK";
    status = "disabled";
   };
  };

  pinctrl_z: pin-controller-z@54004000 {
   #address-cells = <1>;
   #size-cells = <1>;
   compatible = "st,stm32mp157-z-pinctrl";
   ranges = <0 0x54004000 0x400>;
   pins-are-numbered;
   interrupt-parent = <&exti>;
   st,syscfg = <&exti 0x60 0xff>;
   hwlocks = <&hsem 0 1>;

   gpioz: gpio@54004000 {
    gpio-controller;
    #gpio-cells = <2>;
    interrupt-controller;
    #interrupt-cells = <2>;
    reg = <0 0x400>;
    clocks = <&scmi0_clk 11>;
    st,bank-name = "GPIOZ";
    st,bank-ioport = <11>;
    status = "disabled";
   };
  };
 };

 mlahb {
  compatible = "simple-bus";
  #address-cells = <1>;
  #size-cells = <1>;
  dma-ranges = <0x00000000 0x38000000 0x10000>,
        <0x10000000 0x10000000 0x60000>,
        <0x30000000 0x30000000 0x60000>;

  m4_rproc: m4@10000000 {
   compatible = "st,stm32mp1-m4";
   reg = <0x10000000 0x40000>,
         <0x30000000 0x40000>,
         <0x38000000 0x10000>;
   resets = <&scmi0_reset 10>;
   st,syscfg-holdboot = <&rcc 0x10C 0x1>;
   st,syscfg-tz = <&rcc 0x000 0x1>;
   st,syscfg-rsc-tbl = <&tamp 0x144 0xFFFFFFFF>;
   st,syscfg-copro-state = <&tamp 0x148 0xFFFFFFFF>;
   st,syscfg-pdds = <&pwr_mcu 0x0 0x1>;
   status = "disabled";

   m4_system_resources {
    compatible = "rproc-srm-core";
    status = "disabled";
   };
  };
 };
};
# 8 "arch/arm/dts/stm32mp153.dtsi" 2

/ {
 cpus {
  cpu1: cpu@1 {
   compatible = "arm,cortex-a7";
   device_type = "cpu";
   reg = <1>;
   clocks = <&scmi0_clk 7>;
   clock-names = "cpu";
   operating-points-v2 = <&cpu0_opp_table>;
  };
 };

 arm-pmu {
  interrupts = <0 200 4>,
        <0 201 4>;
  interrupt-affinity = <&cpu0>, <&cpu1>;
 };

 soc {
  m_can1: can@4400e000 {
   compatible = "bosch,m_can";
   reg = <0x4400e000 0x400>, <0x44011000 0x1400>;
   reg-names = "m_can", "message_ram";
   interrupts = <0 19 4>,
         <0 21 4>;
   interrupt-names = "int0", "int1";
   clocks = <&scmi0_clk 0>, <&rcc 157>;
   clock-names = "hclk", "cclk";
   bosch,mram-cfg = <0x0 0 0 32 0 0 2 2>;
   status = "disabled";
  };

  m_can2: can@4400f000 {
   compatible = "bosch,m_can";
   reg = <0x4400f000 0x400>, <0x44011000 0x2800>;
   reg-names = "m_can", "message_ram";
   interrupts = <0 20 4>,
         <0 22 4>;
   interrupt-names = "int0", "int1";
   clocks = <&scmi0_clk 0>, <&rcc 157>;
   clock-names = "hclk", "cclk";
   bosch,mram-cfg = <0x1400 0 0 32 0 0 2 2>;
   status = "disabled";
  };
 };
};
# 8 "arch/arm/dts/stm32mp157.dtsi" 2

/ {
 soc {
  gpu: gpu@59000000 {
   compatible = "vivante,gc";
   reg = <0x59000000 0x800>;
   interrupts = <0 109 4>;
   clocks = <&rcc 101>, <&rcc 126>;
   clock-names = "bus" ,"core";
   resets = <&rcc 3269>;
   status = "disabled";
  };

  dsi: dsi@5a000000 {
   compatible = "st,stm32-dsi";
   reg = <0x5a000000 0x800>;
   phy-dsi-supply = <&reg18>;
   clocks = <&rcc 163>, <&scmi0_clk 0>, <&rcc 164>;
   clock-names = "pclk", "ref", "px_clk";
   resets = <&rcc 3076>;
   reset-names = "apb";
   status = "disabled";
  };
 };
};
# 9 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp15xc.dtsi" 1






# 1 "arch/arm/dts/stm32mp15xa.dtsi" 1






&cpu0_opp_table {
  opp-650000000 {
   opp-hz = /bits/ 64 <650000000>;
   opp-microvolt = <1200000>;
   opp-supported-hw = <0x1>;
  };
};
# 8 "arch/arm/dts/stm32mp15xc.dtsi" 2

/ {
 soc {
  cryp1: cryp@54001000 {
   compatible = "st,stm32mp1-cryp";
   reg = <0x54001000 0x400>;
   interrupts = <0 79 4>;
   clocks = <&scmi0_clk 10>;
   resets = <&scmi0_reset 6>;
   status = "disabled";
  };
 };
};
# 10 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp15-pinctrl.dtsi" 1





# 1 "./arch/arm/dts/include/dt-bindings/pinctrl/stm32-pinfunc.h" 1
# 7 "arch/arm/dts/stm32mp15-pinctrl.dtsi" 2

&pinctrl {
 adc1_in6_pins_a: adc1-in6 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };

 adc12_ain_pins_a: adc12-ain-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (14))) << 8) | (0x11))>;
  };
 };

 adc12_usb_cc_pins_a: adc12-usb-cc-pins-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 cec_pins_a: cec-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (15))) << 8) | (0x5))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 cec_pins_sleep_a: cec-sleep-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (15))) << 8) | (0x11))>;
  };
 };

 cec_pins_b: cec-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0x6))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 cec_pins_sleep_b: cec-sleep-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 dac_ch1_pins_a: dac-ch1 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (4))) << 8) | (0x11))>;
  };
 };

 dac_ch2_pins_a: dac-ch2 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 dcmi_pins_a: dcmi-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0xe))>,
     <(((((('B') - 'A') * 0x10 + (7))) << 8) | (0xe))>,
     <(((((('A') - 'A') * 0x10 + (6))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0xe))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0xe))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0xe))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0xe))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (7))) << 8) | (0xe))>,
     <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0xe))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0xe))>;
   bias-disable;
  };
 };

 dcmi_sleep_pins_a: dcmi-sleep-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0x11))>;
  };
 };

 dfsdm_clkout_pins_a: dfsdm-clkout-pins-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x4))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 dfsdm_clkout_sleep_pins_a: dfsdm-clkout-sleep-pins-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x11))>;
  };
 };

 dfsdm_data1_pins_a: dfsdm-data1-pins-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (3))) << 8) | (0x4))>;
  };
 };

 dfsdm_data1_sleep_pins_a: dfsdm-data1-sleep-pins-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (3))) << 8) | (0x11))>;
  };
 };

 dfsdm_data3_pins_a: dfsdm-data3-pins-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (13))) << 8) | (0x7))>;
  };
 };

 dfsdm_data3_sleep_pins_a: dfsdm-data3-sleep-pins-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (13))) << 8) | (0x11))>;
  };
 };

 ethernet0_rgmii_pins_a: rgmii-0 {
  pins1 {
   pinmux = <(((((('G') - 'A') * 0x10 + (5))) << 8) | (0xc))>,
     <(((((('G') - 'A') * 0x10 + (4))) << 8) | (0xc))>,
     <(((((('G') - 'A') * 0x10 + (13))) << 8) | (0xc))>,
     <(((((('G') - 'A') * 0x10 + (14))) << 8) | (0xc))>,
     <(((((('C') - 'A') * 0x10 + (2))) << 8) | (0xc))>,
     <(((((('E') - 'A') * 0x10 + (2))) << 8) | (0xc))>,
     <(((((('B') - 'A') * 0x10 + (11))) << 8) | (0xc))>,
     <(((((('C') - 'A') * 0x10 + (1))) << 8) | (0xc))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <2>;
  };
  pins2 {
   pinmux = <(((((('A') - 'A') * 0x10 + (2))) << 8) | (0xc))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins3 {
   pinmux = <(((((('C') - 'A') * 0x10 + (4))) << 8) | (0xc))>,
     <(((((('C') - 'A') * 0x10 + (5))) << 8) | (0xc))>,
     <(((((('B') - 'A') * 0x10 + (0))) << 8) | (0xc))>,
     <(((((('B') - 'A') * 0x10 + (1))) << 8) | (0xc))>,
     <(((((('A') - 'A') * 0x10 + (1))) << 8) | (0xc))>,
     <(((((('A') - 'A') * 0x10 + (7))) << 8) | (0xc))>;
   bias-disable;
  };
 };

 ethernet0_rgmii_pins_sleep_a: rgmii-sleep-0 {
  pins1 {
   pinmux = <(((((('G') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (7))) << 8) | (0x11))>;
  };
 };

 fmc_pins_a: fmc-0 {
  pins1 {
   pinmux = <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (11))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (0))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (1))) << 8) | (0xd))>,
     <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0xd))>,
     <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0xd))>,
     <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0xd))>,
     <(((((('E') - 'A') * 0x10 + (10))) << 8) | (0xd))>,
     <(((((('G') - 'A') * 0x10 + (9))) << 8) | (0xd))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };
  pins2 {
   pinmux = <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0xd))>;
   bias-pull-up;
  };
 };

 fmc_sleep_pins_a: fmc-sleep-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (9))) << 8) | (0x11))>;
  };
 };

 hdp0_pins_a: hdp0-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0x3))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <2>;
  };
 };

 hdp0_pins_sleep_a: hdp0-sleep-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };

 hdp6_pins_a: hdp6-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0x3))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <2>;
  };
 };

 hdp6_pins_sleep_a: hdp6-sleep-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 hdp7_pins_a: hdp7-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0x3))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <2>;
  };
 };

 hdp7_pins_sleep_a: hdp7-sleep-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 i2c1_pins_a: i2c1-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0x6))>,
     <(((((('F') - 'A') * 0x10 + (15))) << 8) | (0x6))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c1_pins_sleep_a: i2c1-1 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (15))) << 8) | (0x11))>;
  };
 };

 i2c1_pins_b: i2c1-2 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (14))) << 8) | (0x6))>,
     <(((((('F') - 'A') * 0x10 + (15))) << 8) | (0x6))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c1_pins_sleep_b: i2c1-3 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (15))) << 8) | (0x11))>;
  };
 };

 i2c2_pins_a: i2c2-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (4))) << 8) | (0x5))>,
     <(((((('H') - 'A') * 0x10 + (5))) << 8) | (0x5))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c2_pins_sleep_a: i2c2-1 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 i2c2_pins_b1: i2c2-2 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (5))) << 8) | (0x5))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c2_pins_sleep_b1: i2c2-3 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 i2c5_pins_a: i2c5-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (11))) << 8) | (0x5))>,
     <(((((('A') - 'A') * 0x10 + (12))) << 8) | (0x5))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c5_pins_sleep_a: i2c5-1 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (12))) << 8) | (0x11))>;

  };
 };

 i2s2_pins_a: i2s2-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x6))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0x6))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0x6))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
 };

 i2s2_pins_sleep_a: i2s2-1 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0x11))>;
  };
 };

 ltdc_pins_a: ltdc-a-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0xf))>,
     <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0xf))>,
     <(((((('E') - 'A') * 0x10 + (15))) << 8) | (0xf))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0xf))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0xf))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (0))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0xf))>,
     <(((((('D') - 'A') * 0x10 + (9))) << 8) | (0xf))>,
     <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0xf))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('D') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0xf))>,
     <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0xf))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0xf))>,
     <(((((('D') - 'A') * 0x10 + (8))) << 8) | (0xf))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };
 };

 ltdc_pins_sleep_a: ltdc-a-1 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (8))) << 8) | (0x11))>;
  };
 };

 ltdc_pins_b: ltdc-b-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (14))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (13))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (7))) << 8) | (0xf))>,
     <(((((('I') - 'A') * 0x10 + (15))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (0))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (1))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (2))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (3))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (4))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (5))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (6))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (7))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (8))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (9))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (10))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (11))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (0))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (1))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (2))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (12))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (13))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (14))) << 8) | (0xf))>,
     <(((((('J') - 'A') * 0x10 + (15))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (3))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (4))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0xf))>,
     <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0xf))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };
 };

 ltdc_pins_sleep_b: ltdc-b-1 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('J') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 m_can1_pins_a: m-can1-0 {
  pins1 {
   pinmux = <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0xa))>;
   bias-disable;
  };
 };

 m_can1_sleep_pins_a: m_can1-sleep-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0x11))>;
  };
 };

 pwm1_pins_a: pwm1-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x2))>,
     <(((((('E') - 'A') * 0x10 + (11))) << 8) | (0x2))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x2))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm1_sleep_pins_a: pwm1-sleep-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x11))>;
  };
 };

 pwm2_pins_a: pwm2-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0x2))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm2_sleep_pins_a: pwm2-sleep-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0x11))>;
  };
 };

 pwm3_pins_a: pwm3-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x3))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm3_sleep_pins_a: pwm3-sleep-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x11))>;
  };
 };

 pwm4_pins_a: pwm4-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0x3))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0x3))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm4_sleep_pins_a: pwm4-sleep-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0x11))>;
  };
 };

 pwm4_pins_b: pwm4-1 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (13))) << 8) | (0x3))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm4_sleep_pins_b: pwm4-sleep-1 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (13))) << 8) | (0x11))>;
  };
 };

 pwm5_pins_a: pwm5-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0x3))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm5_sleep_pins_a: pwm5-sleep-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0x11))>;
  };
 };

 pwm8_pins_a: pwm8-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x4))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm8_sleep_pins_a: pwm8-sleep-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x11))>;
  };
 };

 pwm12_pins_a: pwm12-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (6))) << 8) | (0x3))>;
   bias-pull-down;
   drive-push-pull;
   slew-rate = <0>;
  };
 };

 pwm12_sleep_pins_a: pwm12-sleep-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 qspi_clk_pins_a: qspi-clk-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0xa))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <3>;
  };
 };

 qspi_clk_sleep_pins_a: qspi-clk-sleep-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0x11))>;
  };
 };

 qspi_bk1_pins_a: qspi-bk1-0 {
  pins1 {
   pinmux = <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0xb))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0xb))>,
     <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0xa))>,
     <(((((('F') - 'A') * 0x10 + (6))) << 8) | (0xa))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0xb))>;
   bias-pull-up;
   drive-push-pull;
   slew-rate = <1>;
  };
 };

 qspi_bk1_sleep_pins_a: qspi-bk1-sleep-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 qspi_bk2_pins_a: qspi-bk2-0 {
  pins1 {
   pinmux = <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0xa))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0xa))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0xc))>,
     <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0xc))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };
  pins2 {
   pinmux = <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0xb))>;
   bias-pull-up;
   drive-push-pull;
   slew-rate = <1>;
  };
 };

 qspi_bk2_sleep_pins_a: qspi-bk2-sleep-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0x11))>;
  };
 };

 rtc_out2_rmp_pins_a: rtc-out2-rmp-pins-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (8))) << 8) | (0x11))>;
  };
 };

 sai2a_pins_a: sai2a-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (5))) << 8) | (0xb))>,
     <(((((('I') - 'A') * 0x10 + (6))) << 8) | (0xb))>,
     <(((((('I') - 'A') * 0x10 + (7))) << 8) | (0xb))>,
     <(((((('E') - 'A') * 0x10 + (0))) << 8) | (0xb))>;
   slew-rate = <0>;
   drive-push-pull;
   bias-disable;
  };
 };

 sai2a_sleep_pins_a: sai2a-1 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (0))) << 8) | (0x11))>;
  };
 };

 sai2b_pins_a: sai2b-0 {
  pins1 {
   pinmux = <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0xb))>,
     <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0xb))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0xb))>;
   slew-rate = <0>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0xb))>;
   bias-disable;
  };
 };

 sai2b_sleep_pins_a: sai2b-1 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x11))>;
  };
 };

 sai2b_pins_b: sai2b-2 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0xb))>;
   bias-disable;
  };
 };

 sai2b_sleep_pins_b: sai2b-3 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0x11))>;
  };
 };

 sai4a_pins_a: sai4a-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (5))) << 8) | (0xb))>;
   slew-rate = <0>;
   drive-push-pull;
   bias-disable;
  };
 };

 sai4a_sleep_pins_a: sai4a-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 sdmmc1_b4_pins_a: sdmmc1-b4-0 {
  pins1 {
   pinmux = <(((((('C') - 'A') * 0x10 + (8))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (9))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (10))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (11))) << 8) | (0xd))>,
     <(((((('D') - 'A') * 0x10 + (2))) << 8) | (0xd))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('C') - 'A') * 0x10 + (12))) << 8) | (0xd))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-disable;
  };
 };

 sdmmc1_b4_od_pins_a: sdmmc1-b4-od-0 {
  pins1 {
   pinmux = <(((((('C') - 'A') * 0x10 + (8))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (9))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (10))) << 8) | (0xd))>,
     <(((((('C') - 'A') * 0x10 + (11))) << 8) | (0xd))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('C') - 'A') * 0x10 + (12))) << 8) | (0xd))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-disable;
  };
  pins3 {
   pinmux = <(((((('D') - 'A') * 0x10 + (2))) << 8) | (0xd))>;
   slew-rate = <1>;
   drive-open-drain;
   bias-disable;
  };
 };

 sdmmc1_b4_sleep_pins_a: sdmmc1-b4-sleep-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (2))) << 8) | (0x11))>;
  };
 };

 sdmmc1_dir_pins_a: sdmmc1-dir-0 {
  pins1 {
   pinmux = <(((((('F') - 'A') * 0x10 + (2))) << 8) | (0xc))>,
     <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x9))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0xc))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
  pins2{
   pinmux = <(((((('E') - 'A') * 0x10 + (4))) << 8) | (0x9))>;
   bias-pull-up;
  };
 };

 sdmmc1_dir_sleep_pins_a: sdmmc1-dir-sleep-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (2))) << 8) | (0x11))>,
     <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (4))) << 8) | (0x11))>;
  };
 };

 sdmmc2_b4_pins_a: sdmmc2-b4-0 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0xa))>,
     <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0xb))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0xa))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-pull-up;
  };
 };

 sdmmc2_b4_od_pins_a: sdmmc2-b4-od-0 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0xa))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-pull-up;
  };
  pins3 {
   pinmux = <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0xb))>;
   slew-rate = <1>;
   drive-open-drain;
   bias-pull-up;
  };
 };

 sdmmc2_b4_sleep_pins_a: sdmmc2-b4-sleep-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0x11))>;
  };
 };

 sdmmc2_b4_pins_b: sdmmc2-b4-1 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0xa))>,
     <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0xb))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0xa))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-disable;
  };
 };

 sdmmc2_b4_od_pins_b: sdmmc2-b4-od-1 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0xa))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-disable;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0xa))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-disable;
  };
  pins3 {
   pinmux = <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0xb))>;
   slew-rate = <1>;
   drive-open-drain;
   bias-disable;
  };
 };

 sdmmc2_d47_pins_a: sdmmc2-d47-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (8))) << 8) | (0xa))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0xb))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0xa))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
 };

 sdmmc2_d47_sleep_pins_a: sdmmc2-d47-sleep-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x11))>;
  };
 };

 sdmmc3_b4_pins_a: sdmmc3-b4-0 {
  pins1 {
   pinmux = <(((((('F') - 'A') * 0x10 + (0))) << 8) | (0xa))>,
     <(((((('F') - 'A') * 0x10 + (4))) << 8) | (0xa))>,
     <(((((('F') - 'A') * 0x10 + (5))) << 8) | (0xa))>,
     <(((((('D') - 'A') * 0x10 + (7))) << 8) | (0xb))>,
     <(((((('F') - 'A') * 0x10 + (1))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
  pins2 {
   pinmux = <(((((('G') - 'A') * 0x10 + (15))) << 8) | (0xb))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-pull-up;
  };
 };

 sdmmc3_b4_od_pins_a: sdmmc3-b4-od-0 {
  pins1 {
   pinmux = <(((((('F') - 'A') * 0x10 + (0))) << 8) | (0xa))>,
     <(((((('F') - 'A') * 0x10 + (4))) << 8) | (0xa))>,
     <(((((('F') - 'A') * 0x10 + (5))) << 8) | (0xa))>,
     <(((((('D') - 'A') * 0x10 + (7))) << 8) | (0xb))>;
   slew-rate = <1>;
   drive-push-pull;
   bias-pull-up;
  };
  pins2 {
   pinmux = <(((((('G') - 'A') * 0x10 + (15))) << 8) | (0xb))>;
   slew-rate = <2>;
   drive-push-pull;
   bias-pull-up;
  };
  pins3 {
   pinmux = <(((((('F') - 'A') * 0x10 + (1))) << 8) | (0xa))>;
   slew-rate = <1>;
   drive-open-drain;
   bias-pull-up;
  };
 };

 sdmmc3_b4_sleep_pins_a: sdmmc3-b4-sleep-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (15))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (1))) << 8) | (0x11))>;
  };
 };

 spdifrx_pins_a: spdifrx-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 spdifrx_sleep_pins_a: spdifrx-1 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };

 spi2_pins_a: spi2-0 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x6))>,
     <(((((('I') - 'A') * 0x10 + (0))) << 8) | (0x6))>,
     <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x6))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <3>;
  };
  pins2 {
   pinmux = <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x6))>;
   bias-disable;
  };
 };

 spi4_pins_a: spi4-0 {
  pins1 {
   pinmux = <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0x6))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x6))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };

  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0x6))>;
   bias-disable;
  };
 };

 spi4_sleep_pins_a: spi4-sleep-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x11))>;
  };
 };

 spi5_pins_a: spi5-0 {
  pins1 {
   pinmux = <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0x6))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0x6))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };

  pins2 {
   pinmux = <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0x6))>;
   bias-disable;
  };
 };

 spi5_sleep_pins_a: spi5-sleep-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0x11))>;
  };
 };

 stusb1600_pins_a: stusb1600-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (11))) << 8) | (0x11))>;
   bias-pull-up;
  };
 };

 uart4_pins_a: uart4-0 {
  pins1 {
   pinmux = <(((((('G') - 'A') * 0x10 + (11))) << 8) | (0x7))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (2))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 uart4_idle_pins_a: uart4-idle-0 {
  pins1 {
   pinmux = <(((((('G') - 'A') * 0x10 + (11))) << 8) | (0x11))>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (2))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 uart4_sleep_pins_a: uart4-sleep-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (2))) << 8) | (0x11))>;
  };
 };

 uart4_pins_b: uart4-1 {
  pins1 {
   pinmux = <(((((('D') - 'A') * 0x10 + (1))) << 8) | (0x9))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (2))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 uart7_pins_a: uart7-0 {
  pins1 {
   pinmux = <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x8))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x8))>,
     <(((((('E') - 'A') * 0x10 + (10))) << 8) | (0x8))>,
     <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 uart7_pins_b: uart7-1 {
  pins1 {
   pinmux = <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x8))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 uart7_idle_pins_b: uart7-idle-1 {
  pins1 {
   pinmux = <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x11))>;
  };
  pins2 {
   pinmux = <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 uart7_sleep_pins_b: uart7-sleep-1 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x11))>;
  };
 };

 usart2_pins_a: usart2-0 {
  pins1 {
   pinmux = <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x8))>,
     <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x8))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <3>;
  };
  pins2 {
   pinmux = <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x8))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 usart2_idle_pins_a: usart2-idle-0 {
  pins1 {
   pinmux = <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x11))>;
  };
  pins2 {
   pinmux = <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 usart2_sleep_pins_a: usart2-sleep-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x11))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x11))>;
  };
 };

 usart3_pins_a: usart3-0 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x8))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x9))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x9))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 usart3_idle_pins_a: usart3-idle-0 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x11))>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 usart3_sleep_pins_a: usart3-sleep-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };

 usart3_pins_b: usart3-1 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x8))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x9))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <0>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x9))>,
     <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x8))>;
   bias-disable;
  };
 };

 usart3_idle_pins_b: usart3-idle-1 {
  pins1 {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x11))>;
  };
  pins2 {
   pinmux = <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x9))>;
   bias-disable;
  };
 };

 usart3_sleep_pins_b: usart3-sleep-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x11))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x11))>,
     <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };

 usbotg_hs_pins_a: usbotg_hs-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (10))) << 8) | (0x11))>;
  };
 };

 usbotg_fs_dp_dm_pins_a: usbotg-fs-dp-dm-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (11))) << 8) | (0x11))>,
     <(((((('A') - 'A') * 0x10 + (12))) << 8) | (0x11))>;
  };
 };
};

&pinctrl_z {
 i2c2_pins_b2: i2c2-0 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (0))) << 8) | (0x4))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c2_pins_sleep_b2: i2c2-1 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (0))) << 8) | (0x11))>;
  };
 };

 i2c4_pins_a: i2c4-0 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (4))) << 8) | (0x7))>,
     <(((((('Z') - 'A') * 0x10 + (5))) << 8) | (0x7))>;
   bias-disable;
   drive-open-drain;
   slew-rate = <0>;
  };
 };

 i2c4_pins_sleep_a: i2c4-1 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (4))) << 8) | (0x11))>,
     <(((((('Z') - 'A') * 0x10 + (5))) << 8) | (0x11))>;
  };
 };

 spi1_pins_a: spi1-0 {
  pins1 {
   pinmux = <(((((('Z') - 'A') * 0x10 + (0))) << 8) | (0x6))>,
     <(((((('Z') - 'A') * 0x10 + (2))) << 8) | (0x6))>;
   bias-disable;
   drive-push-pull;
   slew-rate = <1>;
  };

  pins2 {
   pinmux = <(((((('Z') - 'A') * 0x10 + (1))) << 8) | (0x6))>;
   bias-disable;
  };
 };

 spi1_sleep_pins_a: spi1-sleep-0 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (0))) << 8) | (0x11))>,
     <(((((('Z') - 'A') * 0x10 + (1))) << 8) | (0x11))>,
     <(((((('Z') - 'A') * 0x10 + (2))) << 8) | (0x11))>;
  };
 };
};
# 11 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp15xxaa-pinctrl.dtsi" 1






&pinctrl {
 st,package = <0x1>;

 gpioa: gpio@50002000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 0 16>;
 };

 gpiob: gpio@50003000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 16 16>;
 };

 gpioc: gpio@50004000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 32 16>;
 };

 gpiod: gpio@50005000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 48 16>;
 };

 gpioe: gpio@50006000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 64 16>;
 };

 gpiof: gpio@50007000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 80 16>;
 };

 gpiog: gpio@50008000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 96 16>;
 };

 gpioh: gpio@50009000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 112 16>;
 };

 gpioi: gpio@5000a000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 128 16>;
 };

 gpioj: gpio@5000b000 {
  status = "okay";
  ngpios = <16>;
  gpio-ranges = <&pinctrl 0 144 16>;
 };

 gpiok: gpio@5000c000 {
  status = "okay";
  ngpios = <8>;
  gpio-ranges = <&pinctrl 0 160 8>;
 };
};

&pinctrl_z {
 st,package = <0x1>;

 gpioz: gpio@54004000 {
  status = "okay";
  ngpios = <8>;
  gpio-ranges = <&pinctrl_z 0 400 8>;
 };
};
# 12 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp157-m4-srm.dtsi" 1






&m4_rproc {
 m4_system_resources {
  #address-cells = <1>;
  #size-cells = <0>;

  m4_timers2: timer@40000000 {
   compatible = "rproc-srm-dev";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 197>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers3: timer@40001000 {
   compatible = "rproc-srm-dev";
   reg = <0x40001000 0x400>;
   clocks = <&rcc 198>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers4: timer@40002000 {
   compatible = "rproc-srm-dev";
   reg = <0x40002000 0x400>;
   clocks = <&rcc 199>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers5: timer@40003000 {
   compatible = "rproc-srm-dev";
   reg = <0x40003000 0x400>;
   clocks = <&rcc 200>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers6: timer@40004000 {
   compatible = "rproc-srm-dev";
   reg = <0x40004000 0x400>;
   clocks = <&rcc 201>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers7: timer@40005000 {
   compatible = "rproc-srm-dev";
   reg = <0x40005000 0x400>;
   clocks = <&rcc 202>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers12: timer@40006000 {
   compatible = "rproc-srm-dev";
   reg = <0x40006000 0x400>;
   clocks = <&rcc 203>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers13: timer@40007000 {
   compatible = "rproc-srm-dev";
   reg = <0x40007000 0x400>;
   clocks = <&rcc 204>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers14: timer@40008000 {
   compatible = "rproc-srm-dev";
   reg = <0x40008000 0x400>;
   clocks = <&rcc 205>;
   clock-names = "int";
   status = "disabled";
  };
  m4_lptimer1: timer@40009000 {
   compatible = "rproc-srm-dev";
   reg = <0x40009000 0x400>;
   clocks = <&rcc 143>;
   clock-names = "mux";
   status = "disabled";
  };
  m4_spi2: spi@4000b000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000b000 0x400>;
   clocks = <&rcc 131>;
   status = "disabled";
  };
  m4_i2s2: audio-controller@4000b000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000b000 0x400>;
   status = "disabled";
  };
  m4_spi3: spi@4000c000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000c000 0x400>;
   clocks = <&rcc 132>;
   status = "disabled";
  };
  m4_i2s3: audio-controller@4000c000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000c000 0x400>;
   status = "disabled";
  };
  m4_spdifrx: audio-controller@4000d000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000d000 0x400>;
   clocks = <&rcc 129>;
   clock-names = "kclk";
   status = "disabled";
  };
  m4_usart2: serial@4000e000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000e000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <27 1>;
   clocks = <&rcc 149>;
   status = "disabled";
  };
  m4_usart3: serial@4000f000 {
   compatible = "rproc-srm-dev";
   reg = <0x4000f000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <28 1>;
   clocks = <&rcc 150>;
   status = "disabled";
  };
  m4_uart4: serial@40010000 {
   compatible = "rproc-srm-dev";
   reg = <0x40010000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <30 1>;
   clocks = <&rcc 151>;
   status = "disabled";
  };
  m4_uart5: serial@40011000 {
   compatible = "rproc-srm-dev";
   reg = <0x40011000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <31 1>;
   clocks = <&rcc 152>;
   status = "disabled";
  };
  m4_i2c1: i2c@40012000 {
   compatible = "rproc-srm-dev";
   reg = <0x40012000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <21 1>;
   clocks = <&rcc 137>;
   status = "disabled";
  };
  m4_i2c2: i2c@40013000 {
   compatible = "rproc-srm-dev";
   reg = <0x40013000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <22 1>;
   clocks = <&rcc 138>;
   status = "disabled";
  };
  m4_i2c3: i2c@40014000 {
   compatible = "rproc-srm-dev";
   reg = <0x40014000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <23 1>;
   clocks = <&rcc 139>;
   status = "disabled";
  };
  m4_i2c5: i2c@40015000 {
   compatible = "rproc-srm-dev";
   reg = <0x40015000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <25 1>;
   clocks = <&rcc 141>;
   status = "disabled";
  };
  m4_cec: cec@40016000 {
   compatible = "rproc-srm-dev";
   reg = <0x40016000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <69 1>;
   clocks = <&rcc 136>, <&scmi0_clk 3>;
   clock-names = "cec", "hdmi-cec";
   status = "disabled";
  };
  m4_dac: dac@40017000 {
   compatible = "rproc-srm-dev";
   reg = <0x40017000 0x400>;
   clocks = <&rcc 30>;
   clock-names = "pclk";
   status = "disabled";
  };
  m4_uart7: serial@40018000 {
   compatible = "rproc-srm-dev";
   reg = <0x40018000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <32 1>;
   clocks = <&rcc 154>;
   status = "disabled";
  };
  m4_uart8: serial@40019000 {
   compatible = "rproc-srm-dev";
   reg = <0x40019000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <33 1>;
   clocks = <&rcc 155>;
   status = "disabled";
  };
  m4_timers1: timer@44000000 {
   compatible = "rproc-srm-dev";
   reg = <0x44000000 0x400>;
   clocks = <&rcc 206>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers8: timer@44001000 {
   compatible = "rproc-srm-dev";
   reg = <0x44001000 0x400>;
   clocks = <&rcc 207>;
   clock-names = "int";
   status = "disabled";
  };
  m4_usart6: serial@44003000 {
   compatible = "rproc-srm-dev";
   reg = <0x44003000 0x400>;
   interrupt-parent = <&exti>;
   interrupts = <29 1>;
   clocks = <&rcc 153>;
   status = "disabled";
  };
  m4_spi1: spi@44004000 {
   compatible = "rproc-srm-dev";
   reg = <0x44004000 0x400>;
   clocks = <&rcc 130>;
   status = "disabled";
  };
  m4_i2s1: audio-controller@44004000 {
   compatible = "rproc-srm-dev";
   reg = <0x44004000 0x400>;
   status = "disabled";
  };
  m4_spi4: spi@44005000 {
   compatible = "rproc-srm-dev";
   reg = <0x44005000 0x400>;
   clocks = <&rcc 133>;
   status = "disabled";
  };
  m4_timers15: timer@44006000 {
   compatible = "rproc-srm-dev";
   reg = <0x44006000 0x400>;
   clocks = <&rcc 208>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers16: timer@44007000 {
   compatible = "rproc-srm-dev";
   reg = <0x44007000 0x400>;
   clocks = <&rcc 209>;
   clock-names = "int";
   status = "disabled";
  };
  m4_timers17: timer@44008000 {
   compatible = "rproc-srm-dev";
   reg = <0x44008000 0x400>;
   clocks = <&rcc 210>;
   clock-names = "int";
   status = "disabled";
  };
  m4_spi5: spi@44009000 {
   compatible = "rproc-srm-dev";
   reg = <0x44009000 0x400>;
   clocks = <&rcc 134>;
   status = "disabled";
  };
  m4_sai1: sai@4400a000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400a000 0x4>;
   clocks = <&rcc 158>;
   clock-names = "sai_ck";
   status = "disabled";
  };
  m4_sai2: sai@4400b000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400b000 0x4>;
   clocks = <&rcc 159>;
   clock-names = "sai_ck";
   status = "disabled";
  };
  m4_sai3: sai@4400c000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400c000 0x4>;
   clocks = <&rcc 160>;
   clock-names = "sai_ck";
   status = "disabled";
  };
  m4_dfsdm: dfsdm@4400d000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400d000 0x800>;
   clocks = <&rcc 156>, <&rcc 165>;
   clock-names = "dfsdm", "audio";
   status = "disabled";
  };
  m4_m_can1: can@4400e000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400e000 0x400>, <0x44011000 0x2800>;
   clocks = <&scmi0_clk 0>, <&rcc 157>;
   clock-names = "hclk", "cclk";
   status = "disabled";
  };
  m4_m_can2: can@4400f000 {
   compatible = "rproc-srm-dev";
   reg = <0x4400f000 0x400>, <0x44011000 0x2800>;
   clocks = <&scmi0_clk 0>, <&rcc 157>;
   clock-names = "hclk", "cclk";
   status = "disabled";
  };
  m4_dma1: dma@48000000 {
   compatible = "rproc-srm-dev";
   reg = <0x48000000 0x400>;
   clocks = <&rcc 71>;
   status = "disabled";
  };
  m4_dma2: dma@48001000 {
   compatible = "rproc-srm-dev";
   reg = <0x48001000 0x400>;
   clocks = <&rcc 72>;
   status = "disabled";
  };
  m4_dmamux1: dma-router@48002000 {
   compatible = "rproc-srm-dev";
   reg = <0x48002000 0x1c>;
   clocks = <&rcc 73>;
   status = "disabled";
  };
  m4_adc: adc@48003000 {
   compatible = "rproc-srm-dev";
   reg = <0x48003000 0x400>;
   clocks = <&rcc 74>, <&rcc 162>;
   clock-names = "bus", "adc";
   status = "disabled";
  };
  m4_sdmmc3: sdmmc@48004000 {
   compatible = "rproc-srm-dev";
   reg = <0x48004000 0x400>, <0x48005000 0x400>;
   clocks = <&rcc 120>;
   status = "disabled";
  };
  m4_usbotg_hs: usb-otg@49000000 {
   compatible = "rproc-srm-dev";
   reg = <0x49000000 0x10000>;
   clocks = <&rcc 166>;
   clock-names = "otg";
   status = "disabled";
  };
  m4_hash2: hash@4c002000 {
   compatible = "rproc-srm-dev";
   reg = <0x4c002000 0x400>;
   clocks = <&rcc 79>;
   status = "disabled";
  };
  m4_rng2: rng@4c003000 {
   compatible = "rproc-srm-dev";
   reg = <0x4c003000 0x400>;
   clocks = <&rcc 125>;
   status = "disabled";
  };
  m4_crc2: crc@4c004000 {
   compatible = "rproc-srm-dev";
   reg = <0x4c004000 0x400>;
   clocks = <&rcc 81>;
   status = "disabled";
  };
  m4_cryp2: cryp@4c005000 {
   compatible = "rproc-srm-dev";
   reg = <0x4c005000 0x400>;
   clocks = <&rcc 78>;
   status = "disabled";
  };
  m4_dcmi: dcmi@4c006000 {
   compatible = "rproc-srm-dev";
   reg = <0x4c006000 0x400>;
   clocks = <&rcc 77>;
   clock-names = "mclk";
   status = "disabled";
  };
  m4_lptimer2: timer@50021000 {
   compatible = "rproc-srm-dev";
   reg = <0x50021000 0x400>;
   clocks = <&rcc 144>;
   clock-names = "mux";
   status = "disabled";
  };
  m4_lptimer3: timer@50022000 {
   compatible = "rproc-srm-dev";
   reg = <0x50022000 0x400>;
   clocks = <&rcc 145>;
   clock-names = "mux";
   status = "disabled";
  };
  m4_lptimer4: timer@50023000 {
   compatible = "rproc-srm-dev";
   reg = <0x50023000 0x400>;
   clocks = <&rcc 146>;
   clock-names = "mux";
   status = "disabled";
  };
  m4_lptimer5: timer@50024000 {
   compatible = "rproc-srm-dev";
   reg = <0x50024000 0x400>;
   clocks = <&rcc 147>;
   clock-names = "mux";
   status = "disabled";
  };
  m4_sai4: sai@50027000 {
   compatible = "rproc-srm-dev";
   reg = <0x50027000 0x4>;
   clocks = <&rcc 161>;
   clock-names = "sai_ck";
   status = "disabled";
  };
  m4_qspi: qspi@58003000 {
   compatible = "rproc-srm-dev";
   reg = <0x58003000 0x1000>, <0x70000000 0x10000000>;
   clocks = <&rcc 122>;
   status = "disabled";
  };
  m4_ethernet0: ethernet@5800a000 {
   compatible = "rproc-srm-dev";
   reg = <0x5800a000 0x2000>;
   clock-names = "stmmaceth",
          "mac-clk-tx",
          "mac-clk-rx",
          "ethstp",
          "syscfg-clk";
   clocks = <&rcc 105>,
     <&rcc 103>,
     <&rcc 104>,
     <&rcc 112>,
     <&rcc 51>;
   status = "disabled";
  };
 };
};
# 13 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp157-m4-srm-pinctrl.dtsi" 1






&pinctrl {
 m4_adc1_in6_pins_a: m4-adc1-in6 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };

 m4_adc12_ain_pins_a: m4-adc12-ain-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (14))) << 8) | (0x12))>;
  };
 };

 m4_adc12_usb_pwr_pins_a: m4-adc12-usb-pwr-pins-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_cec_pins_a: m4-cec-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (15))) << 8) | (0x12))>;
  };
 };

 m4_cec_pins_b: m4-cec-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_dac_ch1_pins_a: m4-dac-ch1 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (4))) << 8) | (0x12))>;
  };
 };

 m4_dac_ch2_pins_a: m4-dac-ch2 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_dcmi_pins_a: m4-dcmi-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0x12))>;
  };
 };

 m4_dfsdm_clkout_pins_a: m4-dfsdm-clkout-pins-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x12))>;
  };
 };

 m4_dfsdm_data1_pins_a: m4-dfsdm-data1-pins-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_dfsdm_data3_pins_a: m4-dfsdm-data3-pins-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (13))) << 8) | (0x12))>;
  };
 };

 m4_ethernet0_rgmii_pins_a: m4-rgmii-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (7))) << 8) | (0x12))>;
  };
 };

 m4_fmc_pins_a: m4-fmc-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_hdp0_pins_a: m4-hdp0-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };

 m4_hdp6_pins_a: m4-hdp6-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_hdp7_pins_a: m4-hdp7-0 {
  pins {
   pinmux = <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_i2c1_pins_a: m4-i2c1-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (15))) << 8) | (0x12))>;
  };
 };

 m4_i2c2_pins_a: m4-i2c2-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_i2c5_pins_a: m4-i2c5-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };

 m4_i2s2_pins_a: m4-i2s2-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0x12))>;
  };
 };

 m4_ltdc_pins_a: m4-ltdc-a-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (8))) << 8) | (0x12))>;
  };
 };

 m4_ltdc_pins_b: m4-ltdc-b-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('J') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('K') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_m_can1_pins_a: m4-m-can1-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (9))) << 8) | (0x12))>;
  };
 };

 m4_pwm1_pins_a: m4-pwm1-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x12))>;
  };
 };

 m4_pwm2_pins_a: m4-pwm2-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_pwm3_pins_a: m4-pwm3-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x12))>;
  };
 };

 m4_pwm4_pins_a: m4-pwm4-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (15))) << 8) | (0x12))>;
  };
 };

 m4_pwm4_pins_b: m4-pwm4-1 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (13))) << 8) | (0x12))>;
  };
 };

 m4_pwm5_pins_a: m4-pwm5-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (11))) << 8) | (0x12))>;
  };
 };

 m4_pwm8_pins_a: m4-pwm8-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (2))) << 8) | (0x12))>;
  };
 };

 m4_pwm12_pins_a: m4-pwm12-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_qspi_bk1_pins_a: m4-qspi-bk1-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (6))) << 8) | (0x12))>;
  };
 };

 m4_qspi_bk2_pins_a: m4-qspi-bk2-0 {
  pins {
   pinmux = <(((((('H') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('H') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (0))) << 8) | (0x12))>;
  };
 };

 m4_qspi_clk_pins_a: m4-qspi-clk-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (10))) << 8) | (0x12))>;
  };
 };

 m4_rtc_out2_rmp_pins_a: m4-rtc-out2-rmp-pins-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (8))) << 8) | (0x12))>;
  };
 };

 m4_sai2a_pins_a: m4-sai2a-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (0))) << 8) | (0x12))>;
  };
 };

 m4_sai2b_pins_a: m4-sai2b-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0x12))>;
  };
 };

 m4_sai2b_pins_b: m4-sai2b-2 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (11))) << 8) | (0x12))>;
  };
 };

 m4_sai4a_pins_a: m4-sai4a-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc1_b4_pins_a: m4-sdmmc1-b4-0 {
  pins {
   pinmux = <(((((('C') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc1_dir_pins_a: m4-sdmmc1-dir-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('C') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (4))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc2_b4_pins_a: m4-sdmmc2-b4-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc2_b4_pins_b: m4-sdmmc2-b4-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (15))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (3))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc2_d47_pins_a: m4-sdmmc2-d47-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_sdmmc3_b4_pins_a: m4-sdmmc3-b4-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (1))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (15))) << 8) | (0x12))>;
  };
 };

 m4_spdifrx_pins_a: m4-spdifrx-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };

 m4_spi4_pins_a: m4-spi4-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (14))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (13))) << 8) | (0x12))>;
  };
 };

 m4_spi5_pins_a: m4-spi5-0 {
  pins {
   pinmux = <(((((('F') - 'A') * 0x10 + (7))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (9))) << 8) | (0x12))>,
     <(((((('F') - 'A') * 0x10 + (8))) << 8) | (0x12))>;
  };
 };

 m4_stusb1600_pins_a: m4-stusb1600-0 {
  pins {
   pinmux = <(((((('I') - 'A') * 0x10 + (11))) << 8) | (0x12))>;
  };
 };

 m4_uart4_pins_a: m4-uart4-0 {
  pins {
   pinmux = <(((((('G') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (2))) << 8) | (0x12))>;
  };
 };

 m4_uart7_pins_a: m4-uart7-0 {
  pins {
   pinmux = <(((((('E') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('E') - 'A') * 0x10 + (7))) << 8) | (0x12))>;
  };
 };

 m4_usart2_pins_a: m4-usart2-0 {
  pins {
   pinmux = <(((((('D') - 'A') * 0x10 + (5))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (6))) << 8) | (0x12))>,
     <(((((('D') - 'A') * 0x10 + (3))) << 8) | (0x12))>;
  };
 };

 m4_usart3_pins_a: m4-usart3-0 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('I') - 'A') * 0x10 + (10))) << 8) | (0x12))>;
  };
 };

 m4_usart3_pins_b: m4-usart3-1 {
  pins {
   pinmux = <(((((('B') - 'A') * 0x10 + (10))) << 8) | (0x12))>,
     <(((((('G') - 'A') * 0x10 + (8))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (12))) << 8) | (0x12))>,
     <(((((('B') - 'A') * 0x10 + (13))) << 8) | (0x12))>;
  };
 };

 m4_usbotg_hs_pins_a: m4-usbotg_hs-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (10))) << 8) | (0x12))>;
  };
 };

 m4_usbotg_fs_dp_dm_pins_a: m4-usbotg-fs-dp-dm-0 {
  pins {
   pinmux = <(((((('A') - 'A') * 0x10 + (11))) << 8) | (0x12))>,
     <(((((('A') - 'A') * 0x10 + (12))) << 8) | (0x12))>;
  };
 };
};

&pinctrl_z {
 m4_i2c4_pins_a: m4-i2c4-0 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (4))) << 8) | (0x12))>,
     <(((((('Z') - 'A') * 0x10 + (5))) << 8) | (0x12))>;
  };
 };

 m4_spi1_pins_a: m4-spi1-0 {
  pins {
   pinmux = <(((((('Z') - 'A') * 0x10 + (0))) << 8) | (0x12))>,
     <(((((('Z') - 'A') * 0x10 + (2))) << 8) | (0x12))>,
     <(((((('Z') - 'A') * 0x10 + (1))) << 8) | (0x12))>;
  };
 };
};
# 14 "arch/arm/dts/stm32mp157c-ed1.dts" 2
# 1 "arch/arm/dts/stm32mp15xx-edx.dtsi" 1







# 1 "./arch/arm/dts/include/dt-bindings/mfd/st,stpmic1.h" 1
# 9 "arch/arm/dts/stm32mp15xx-edx.dtsi" 2

/ {
 memory@c0000000 {
  device_type = "memory";
  reg = <0xC0000000 0x40000000>;
 };

 reserved-memory {
  #address-cells = <1>;
  #size-cells = <1>;
  ranges;

  mcuram2: mcuram2@10000000 {
   compatible = "shared-dma-pool";
   reg = <0x10000000 0x40000>;
   no-map;
  };

  vdev0vring0: vdev0vring0@10040000 {
   compatible = "shared-dma-pool";
   reg = <0x10040000 0x1000>;
   no-map;
  };

  vdev0vring1: vdev0vring1@10041000 {
   compatible = "shared-dma-pool";
   reg = <0x10041000 0x1000>;
   no-map;
  };

  vdev0buffer: vdev0buffer@10042000 {
   compatible = "shared-dma-pool";
   reg = <0x10042000 0x4000>;
   no-map;
  };

  mcuram: mcuram@30000000 {
   compatible = "shared-dma-pool";
   reg = <0x30000000 0x40000>;
   no-map;
  };

  retram: retram@38000000 {
   compatible = "shared-dma-pool";
   reg = <0x38000000 0x10000>;
   no-map;
  };
 };

 led {
  compatible = "gpio-leds";
  blue {
   label = "heartbeat";
   gpios = <&gpiod 9 0>;
   linux,default-trigger = "heartbeat";
   default-state = "off";
  };
 };

 sd_switch: regulator-sd_switch {
  compatible = "regulator-gpio";
  regulator-name = "sd_switch";
  regulator-min-microvolt = <1800000>;
  regulator-max-microvolt = <2900000>;
  regulator-type = "voltage";
  regulator-always-on;

  gpios = <&gpiof 14 0>;
  gpios-states = <0>;
  states = <1800000 0x1 2900000 0x0>;
 };

 vin: vin {
  compatible = "regulator-fixed";
  regulator-name = "vin";
  regulator-min-microvolt = <5000000>;
  regulator-max-microvolt = <5000000>;
  regulator-always-on;
 };
};

&adc {

 pinctrl-0 = <&adc1_in6_pins_a>;
 pinctrl-names = "default";
 vdd-supply = <&vdd>;
 vdda-supply = <&vdda>;
 vref-supply = <&vdda>;
 status = "disabled";
 adc1: adc@0 {
  st,adc-channels = <0 1 6>;

  st,min-sample-time-nsecs = <400>;
  status = "okay";
 };
};

&cpu0{
 cpu-supply = <&vddcore>;
};

&crc1 {
 status = "okay";
};

&dac {
 pinctrl-names = "default";
 pinctrl-0 = <&dac_ch1_pins_a &dac_ch2_pins_a>;
 vref-supply = <&vdda>;
 status = "disabled";
 dac1: dac@1 {
  status = "okay";
 };
 dac2: dac@2 {
  status = "okay";
 };
};

&dma1 {
 sram = <&dma_pool>;
};

&dma2 {
 sram = <&dma_pool>;
};

&dts {
 status = "okay";
};

&hash1 {
 status = "okay";
};

&i2c4 {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&i2c4_pins_a>;
 pinctrl-1 = <&i2c4_pins_sleep_a>;
 i2c-scl-rising-time-ns = <185>;
 i2c-scl-falling-time-ns = <20>;
 clock-frequency = <400000>;
 status = "okay";

 /delete-property/dmas;
 /delete-property/dma-names;

 pmic: stpmic@33 {
  compatible = "st,stpmic1";
  reg = <0x33>;
  interrupts-extended = <&exti_pwr 55 2>;
  interrupt-controller;
  #interrupt-cells = <2>;
  status = "okay";

  regulators {
   compatible = "st,stpmic1-regulators";
   buck1-supply = <&vin>;
   buck2-supply = <&vin>;
   buck3-supply = <&vin>;
   buck4-supply = <&vin>;
   ldo1-supply = <&v3v3>;
   ldo2-supply = <&v3v3>;
   ldo3-supply = <&vdd_ddr>;
   ldo4-supply = <&vin>;
   ldo5-supply = <&v3v3>;
   ldo6-supply = <&v3v3>;
   vref_ddr-supply = <&vin>;
   boost-supply = <&vin>;
   pwr_sw1-supply = <&bst_out>;
   pwr_sw2-supply = <&bst_out>;

   vddcore: buck1 {
    regulator-name = "vddcore";
    regulator-min-microvolt = <1200000>;
    regulator-max-microvolt = <1350000>;
    regulator-always-on;
    regulator-initial-mode = <0>;
    regulator-over-current-protection;
   };

   vdd_ddr: buck2 {
    regulator-name = "vdd_ddr";
    regulator-min-microvolt = <1350000>;
    regulator-max-microvolt = <1350000>;
    regulator-always-on;
    regulator-initial-mode = <0>;
    regulator-over-current-protection;
   };

   vdd: buck3 {
    regulator-name = "vdd";
    regulator-min-microvolt = <3300000>;
    regulator-max-microvolt = <3300000>;
    regulator-always-on;
    st,mask-reset;
    regulator-initial-mode = <0>;
    regulator-over-current-protection;
   };

   v3v3: buck4 {
    regulator-name = "v3v3";
    regulator-min-microvolt = <3300000>;
    regulator-max-microvolt = <3300000>;
    regulator-always-on;
    regulator-over-current-protection;
    regulator-initial-mode = <0>;
   };

   vdda: ldo1 {
    regulator-name = "vdda";
    regulator-min-microvolt = <2900000>;
    regulator-max-microvolt = <2900000>;
    interrupts = <16 0>;
   };

   v2v8: ldo2 {
    regulator-name = "v2v8";
    regulator-min-microvolt = <2800000>;
    regulator-max-microvolt = <2800000>;
    interrupts = <17 0>;
   };

   vtt_ddr: ldo3 {
    regulator-name = "vtt_ddr";
    regulator-min-microvolt = <500000>;
    regulator-max-microvolt = <750000>;
    regulator-always-on;
    regulator-over-current-protection;
   };

   vdd_usb: ldo4 {
    regulator-name = "vdd_usb";
    regulator-min-microvolt = <3300000>;
    regulator-max-microvolt = <3300000>;
    interrupts = <19 0>;
    regulator-always-on;
   };

   vdd_sd: ldo5 {
    regulator-name = "vdd_sd";
    regulator-min-microvolt = <2900000>;
    regulator-max-microvolt = <2900000>;
    interrupts = <20 0>;
    regulator-boot-on;
   };

   v1v8: ldo6 {
    regulator-name = "v1v8";
    regulator-min-microvolt = <1800000>;
    regulator-max-microvolt = <1800000>;
    interrupts = <21 0>;
   };

   vref_ddr: vref_ddr {
    regulator-name = "vref_ddr";
    regulator-always-on;
    regulator-over-current-protection;
   };

   bst_out: boost {
    regulator-name = "bst_out";
    interrupts = <14 0>;
   };

   vbus_otg: pwr_sw1 {
    regulator-name = "vbus_otg";
    interrupts = <12 0>;
    };

    vbus_sw: pwr_sw2 {
    regulator-name = "vbus_sw";
    interrupts = <13 0>;
    regulator-active-discharge = <1>;
    };
  };

  onkey {
   compatible = "st,stpmic1-onkey";
   interrupts = <0 0>, <1 0>;
   interrupt-names = "onkey-falling", "onkey-rising";
   power-off-time-sec = <10>;
   status = "okay";
  };

  watchdog {
   compatible = "st,stpmic1-wdt";
   status = "disabled";
  };
 };
};

&ipcc {
 status = "okay";
};

&iwdg2 {
 timeout-sec = <32>;
 status = "okay";
};

&m4_rproc {
 memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
   <&vdev0vring1>, <&vdev0buffer>;
 mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
 mbox-names = "vq0", "vq1", "shutdown";
 interrupt-parent = <&exti>;
 interrupts = <68 1>;
 wakeup-source;
 status = "okay";
};

&pwr_regulators {
 vdd-supply = <&vdd>;
 vdd_3v3_usbfs-supply = <&vdd_usb>;
};

&rng1 {
 status = "okay";
};

&rtc {
 status = "okay";
};

&sdmmc1 {
 pinctrl-names = "default", "opendrain", "sleep";
 pinctrl-0 = <&sdmmc1_b4_pins_a &sdmmc1_dir_pins_a>;
 pinctrl-1 = <&sdmmc1_b4_od_pins_a &sdmmc1_dir_pins_a>;
 pinctrl-2 = <&sdmmc1_b4_sleep_pins_a &sdmmc1_dir_sleep_pins_a>;
 cd-gpios = <&gpiog 1 (1 | 16)>;
 disable-wp;
 st,sig-dir;
 st,neg-edge;
 st,use-ckin;
 bus-width = <4>;
 vmmc-supply = <&vdd_sd>;
 vqmmc-supply = <&sd_switch>;
 sd-uhs-sdr12;
 sd-uhs-sdr25;
 sd-uhs-sdr50;
 sd-uhs-ddr50;
 sd-uhs-sdr104;
 status = "okay";
};

&sdmmc2 {
 pinctrl-names = "default", "opendrain", "sleep";
 pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_a>;
 pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_a>;
 pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_a>;
 non-removable;
 no-sd;
 no-sdio;
 st,neg-edge;
 bus-width = <8>;
 vmmc-supply = <&v3v3>;
 vqmmc-supply = <&vdd>;
 mmc-ddr-3_3v;
 status = "okay";
};

&sram {
 dma_pool: dma_pool@0 {
  reg = <0x50000 0x10000>;
  pool;
 };
};

&timers6 {
 status = "okay";

 /delete-property/dmas;
 /delete-property/dma-names;
 timer@5 {
  status = "okay";
 };
};

&uart4 {
 pinctrl-names = "default", "sleep", "idle";
 pinctrl-0 = <&uart4_pins_a>;
 pinctrl-1 = <&uart4_sleep_pins_a>;
 pinctrl-2 = <&uart4_idle_pins_a>;
 pinctrl-3 = <&uart4_pins_a>;
 /delete-property/dmas;
 /delete-property/dma-names;
 status = "okay";
};

&usbotg_hs {
 vbus-supply = <&vbus_otg>;
};

&usbphyc_port0 {
 phy-supply = <&vdd_usb>;
};

&usbphyc_port1 {
 phy-supply = <&vdd_usb>;
};
# 15 "arch/arm/dts/stm32mp157c-ed1.dts" 2

/ {
 model = "STMicroelectronics STM32MP157C eval daughter";
 compatible = "st,stm32mp157c-ed1", "st,stm32mp157";

 chosen {
  stdout-path = "serial0:115200n8";
 };

 aliases {
  serial0 = &uart4;
 };

 reserved-memory {
  gpu_reserved: gpu@f6000000 {
   reg = <0xf6000000 0x8000000>;
   no-map;
  };

  optee_memory: optee@fe000000 {
   reg = <0xfe000000 0x02000000>;
   no-map;
  };
 };
};

&cpu1{
 cpu-supply = <&vddcore>;
};

&cryp1 {
 status="okay";
};

&gpu {
 contiguous-area = <&gpu_reserved>;
 status = "okay";
};

&optee {
 status = "okay";
};
# 9 "arch/arm/dts/.stm32mp157c-ev1.dtb.pre.tmp" 2
# 1 "arch/arm/dts/stm32mp15xx-evx.dtsi" 1






# 1 "./arch/arm/dts/include/dt-bindings/input/input.h" 1
# 12 "./arch/arm/dts/include/dt-bindings/input/input.h"
# 1 "./arch/arm/dts/include/dt-bindings/input/linux-event-codes.h" 1
# 13 "./arch/arm/dts/include/dt-bindings/input/input.h" 2
# 8 "arch/arm/dts/stm32mp15xx-evx.dtsi" 2
# 1 "./arch/arm/dts/include/dt-bindings/soc/stm32-hdp.h" 1
# 9 "arch/arm/dts/stm32mp15xx-evx.dtsi" 2

/ {
 clocks {
  clk_ext_camera: clk-ext-camera {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <24000000>;
  };
 };

 joystick {
  compatible = "gpio-keys";
  #size-cells = <0>;
  pinctrl-0 = <&joystick_pins>;
  pinctrl-names = "default";
  button-0 {
   label = "JoySel";
   linux,code = <28>;
   interrupt-parent = <&stmfx_pinctrl>;
   interrupts = <0 1>;
  };
  button-1 {
   label = "JoyDown";
   linux,code = <108>;
   interrupt-parent = <&stmfx_pinctrl>;
   interrupts = <1 1>;
  };
  button-2 {
   label = "JoyLeft";
   linux,code = <105>;
   interrupt-parent = <&stmfx_pinctrl>;
   interrupts = <2 1>;
  };
  button-3 {
   label = "JoyRight";
   linux,code = <106>;
   interrupt-parent = <&stmfx_pinctrl>;
   interrupts = <3 1>;
  };
  button-4 {
   label = "JoyUp";
   linux,code = <103>;
   interrupt-parent = <&stmfx_pinctrl>;
   interrupts = <4 1>;
  };
 };

 panel_backlight: panel-backlight {
  compatible = "gpio-backlight";
  gpios = <&gpiod 13 1>;
  default-on;
  status = "okay";
 };

 spdif_out: spdif-out {
  #sound-dai-cells = <0>;
  compatible = "linux,spdif-dit";
  status = "okay";

  spdif_out_port: port {
   spdif_out_endpoint: endpoint {
    remote-endpoint = <&sai4a_endpoint>;
   };
  };
 };

 spdif_in: spdif-in {
  #sound-dai-cells = <0>;
  compatible = "linux,spdif-dir";
  status = "okay";

  spdif_in_port: port {
   spdif_in_endpoint: endpoint {
    remote-endpoint = <&spdifrx_endpoint>;
   };
  };
 };

 sound {
  compatible = "audio-graph-card";
  label = "STM32MP1-EV";
  routing =
   "AIF1CLK" , "MCLK1",
   "AIF2CLK" , "MCLK1",
   "IN1LN" , "MICBIAS2",
   "DMIC2DAT" , "MICBIAS1",
   "DMIC1DAT" , "MICBIAS1";
  dais = <&sai2a_port &sai2b_port &sai4a_port &spdifrx_port
   &dfsdm0_port &dfsdm1_port &dfsdm2_port &dfsdm3_port>;
  status = "okay";
 };

 dmic0: dmic-0 {
  compatible = "dmic-codec";
  #sound-dai-cells = <1>;
  sound-name-prefix = "dmic0";
  status = "okay";

  port {
   dmic0_endpoint: endpoint {
    remote-endpoint = <&dfsdm_endpoint0>;
   };
  };
 };

 dmic1: dmic-1 {
  compatible = "dmic-codec";
  #sound-dai-cells = <1>;
  sound-name-prefix = "dmic1";
  status = "okay";

  port {
   dmic1_endpoint: endpoint {
    remote-endpoint = <&dfsdm_endpoint1>;
   };
  };
 };

 dmic2: dmic-2 {
  compatible = "dmic-codec";
  #sound-dai-cells = <1>;
  sound-name-prefix = "dmic2";
  status = "okay";

  port {
   dmic2_endpoint: endpoint {
    remote-endpoint = <&dfsdm_endpoint2>;
   };
  };
 };

 dmic3: dmic-3 {
  compatible = "dmic-codec";
  #sound-dai-cells = <1>;
  sound-name-prefix = "dmic3";
  status = "okay";

  port {
   dmic3_endpoint: endpoint {
    remote-endpoint = <&dfsdm_endpoint3>;
   };
  };
 };

 usb_phy_tuning: usb-phy-tuning {
  st,hs-dc-level = <2>;
  st,fs-rftime-tuning;
  st,hs-rftime-reduction;
  st,hs-current-trim = <15>;
  st,hs-impedance-trim = <1>;
  st,squelch-level = <3>;
  st,hs-rx-offset = <2>;
  st,no-lsfs-sc;
 };
};

&cec {
 pinctrl-names = "default";
 pinctrl-0 = <&cec_pins_a>;
 status = "okay";
};

&dcmi {
 status = "okay";
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&dcmi_pins_a>;
 pinctrl-1 = <&dcmi_sleep_pins_a>;

 port {
  dcmi_0: endpoint {
   remote-endpoint = <&ov5640_0>;
   bus-width = <8>;
   hsync-active = <0>;
   vsync-active = <0>;
   pclk-sample = <1>;
   pclk-max-frequency = <77000000>;
  };
 };
};

&dfsdm {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&dfsdm_clkout_pins_a
       &dfsdm_data1_pins_a &dfsdm_data3_pins_a>;
 pinctrl-1 = <&dfsdm_clkout_sleep_pins_a
       &dfsdm_data1_sleep_pins_a &dfsdm_data3_sleep_pins_a>;
 spi-max-frequency = <2048000>;

 clocks = <&rcc 156>, <&rcc 165>;
 clock-names = "dfsdm", "audio";
 status = "okay";

 dfsdm0: filter@0 {
  compatible = "st,stm32-dfsdm-dmic";
  st,adc-channels = <3>;
  st,adc-channel-names = "dmic_u1";
  st,adc-channel-types = "SPI_R";
  st,adc-channel-clk-src = "CLKOUT";
  st,filter-order = <3>;
  status = "okay";

  asoc_pdm0: dfsdm-dai {
   compatible = "st,stm32h7-dfsdm-dai";
   #sound-dai-cells = <0>;
   io-channels = <&dfsdm0 0>;
   status = "okay";

   dfsdm0_port: port {
    dfsdm_endpoint0: endpoint {
     remote-endpoint = <&dmic0_endpoint>;
    };
   };
  };
 };

 dfsdm1: filter@1 {
  compatible = "st,stm32-dfsdm-dmic";
  st,adc-channels = <1>;
  st,adc-channel-names = "dmic_u2";
  st,adc-channel-types = "SPI_F";
  st,adc-channel-clk-src = "CLKOUT";
  st,filter-order = <3>;
  status = "okay";

  asoc_pdm1: dfsdm-dai {
   compatible = "st,stm32h7-dfsdm-dai";
   #sound-dai-cells = <0>;
   io-channels = <&dfsdm1 0>;
   status = "okay";

   dfsdm1_port: port {
    dfsdm_endpoint1: endpoint {
     remote-endpoint = <&dmic1_endpoint>;
    };
   };
  };
 };

 dfsdm2: filter@2 {
  compatible = "st,stm32-dfsdm-dmic";
  st,adc-channels = <3>;
  st,adc-channel-names = "dmic_u3";
  st,adc-channel-types = "SPI_F";
  st,adc-channel-clk-src = "CLKOUT";
  st,filter-order = <3>;
  status = "okay";

  asoc_pdm2: dfsdm-dai {
   compatible = "st,stm32h7-dfsdm-dai";
   #sound-dai-cells = <0>;
   io-channels = <&dfsdm2 0>;
   status = "okay";

   dfsdm2_port: port {
    dfsdm_endpoint2: endpoint {
     remote-endpoint = <&dmic2_endpoint>;
    };
   };
  };
 };

 dfsdm3: filter@3 {
  compatible = "st,stm32-dfsdm-dmic";
  st,adc-channels = <1>;
  st,adc-channel-names = "dmic_u4";
  st,adc-channel-types = "SPI_R";
  st,adc-channel-clk-src = "CLKOUT";
  st,filter-order = <3>;
  status = "okay";

  asoc_pdm3: dfsdm-dai {
   compatible = "st,stm32h7-dfsdm-dai";
   #sound-dai-cells = <0>;
   io-channels = <&dfsdm3 0>;
   status = "okay";

   dfsdm3_port: port {
    dfsdm_endpoint3: endpoint {
     remote-endpoint = <&dmic3_endpoint>;
    };
   };
  };
 };
};

&ethernet0 {
 status = "okay";
 pinctrl-0 = <&ethernet0_rgmii_pins_a>;
 pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
 pinctrl-names = "default", "sleep";
 phy-mode = "rgmii-id";
 max-speed = <1000>;
 phy-handle = <&phy0>;

 mdio0 {
  #address-cells = <1>;
  #size-cells = <0>;
  compatible = "snps,dwmac-mdio";
  phy0: ethernet-phy@0 {
   reg = <0>;
  };
 };
};

&fmc {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&fmc_pins_a>;
 pinctrl-1 = <&fmc_sleep_pins_a>;
 status = "okay";
 #address-cells = <1>;
 #size-cells = <0>;

 nand@0 {
  reg = <0>;
  nand-on-flash-bbt;
  #address-cells = <1>;
  #size-cells = <1>;
 };
};

&hdp {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&hdp0_pins_a &hdp6_pins_a &hdp7_pins_a>;
 pinctrl-1 = <&hdp0_pins_sleep_a &hdp6_pins_sleep_a &hdp7_pins_sleep_a>;
 status = "disabled";

 muxing-hdp = <(((15) << ((0) * 4)) |
         ((15) << ((6) * 4)) |
         ((15) << ((7) * 4)))>;
};

&i2c2 {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&i2c2_pins_a>;
 pinctrl-1 = <&i2c2_pins_sleep_a>;
 i2c-scl-rising-time-ns = <185>;
 i2c-scl-falling-time-ns = <20>;
 status = "okay";
 /delete-property/dmas;
 /delete-property/dma-names;

 wm8994: wm8994@1b {
  compatible = "wlf,wm8994";
  #sound-dai-cells = <0>;
  reg = <0x1b>;
  status = "okay";

  gpio-controller;
  #gpio-cells = <2>;

  DBVDD-supply = <&vdd>;
  SPKVDD1-supply = <&vdd>;
  SPKVDD2-supply = <&vdd>;
  AVDD2-supply = <&v1v8>;
  CPVDD-supply = <&v1v8>;

  wlf,ldoena-always-driven;

  clocks = <&sai2a>;
  clock-names = "MCLK1";

  wlf,gpio-cfg = <0x8101 0xa100 0xa100 0xa100 0xa101 0xa101 0xa100 0xa101 0xa101 0xa101 0xa101>;

  ports {
   #address-cells = <1>;
   #size-cells = <0>;

   wm8994_tx_port: port@0 {
    reg = <0>;
    wm8994_tx_endpoint: endpoint {
     remote-endpoint = <&sai2a_endpoint>;
    };
   };

   wm8994_rx_port: port@1 {
    reg = <1>;
    wm8994_rx_endpoint: endpoint {
     remote-endpoint = <&sai2b_endpoint>;
    };
   };
  };
 };

 ov5640: camera@3c {
  compatible = "ovti,ov5640";
  reg = <0x3c>;
  clocks = <&clk_ext_camera>;
  clock-names = "xclk";
  DOVDD-supply = <&v2v8>;
  powerdown-gpios = <&stmfx_pinctrl 18 (0 | 0)>;
  reset-gpios = <&stmfx_pinctrl 19 (1 | 0)>;
  rotation = <180>;
  status = "okay";

  port {
   ov5640_0: endpoint {
    remote-endpoint = <&dcmi_0>;
    bus-width = <8>;
    data-shift = <2>;
    hsync-active = <0>;
    vsync-active = <0>;
    pclk-sample = <1>;
    pclk-max-frequency = <77000000>;
   };
  };
 };

 stmfx: stmfx@42 {
  compatible = "st,stmfx-0300";
  reg = <0x42>;
  interrupts = <8 1>;
  interrupt-parent = <&gpioi>;
  vdd-supply = <&v3v3>;

  stmfx_pinctrl: stmfx-pin-controller {
   compatible = "st,stmfx-0300-pinctrl";
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
   gpio-ranges = <&stmfx_pinctrl 0 0 24>;

   goodix_pins: goodix {
    pins = "gpio14";
    bias-pull-down;
   };

   joystick_pins: joystick {
    pins = "gpio0", "gpio1", "gpio2", "gpio3", "gpio4";
    bias-pull-down;
   };
  };
 };
};

&i2c4 {
 pmic: stpmic@33 {
  regulators {
   v1v8: ldo6 {
    regulator-enable-ramp-delay = <300000>;
   };
  };
 };
};

&i2c5 {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&i2c5_pins_a>;
 pinctrl-1 = <&i2c5_pins_sleep_a>;
 i2c-scl-rising-time-ns = <185>;
 i2c-scl-falling-time-ns = <20>;
 /delete-property/dmas;
 /delete-property/dma-names;
 status = "okay";
};

&ltdc {
 status = "okay";

 port {
  #address-cells = <1>;
  #size-cells = <0>;

  ltdc_ep0_out: endpoint@0 {
   reg = <0>;
   remote-endpoint = <&dsi_in>;
  };
 };
};

&qspi {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&qspi_clk_pins_a &qspi_bk1_pins_a &qspi_bk2_pins_a>;
 pinctrl-1 = <&qspi_clk_sleep_pins_a &qspi_bk1_sleep_pins_a &qspi_bk2_sleep_pins_a>;
 reg = <0x58003000 0x1000>, <0x70000000 0x4000000>;
 #address-cells = <1>;
 #size-cells = <0>;
 status = "okay";

 flash0: mx66l51235l@0 {
  compatible = "jedec,spi-nor";
  reg = <0>;
  spi-rx-bus-width = <4>;
  spi-max-frequency = <108000000>;
  #address-cells = <1>;
  #size-cells = <1>;
 };

 flash1: mx66l51235l@1 {
  compatible = "jedec,spi-nor";
  reg = <1>;
  spi-rx-bus-width = <4>;
  spi-max-frequency = <108000000>;
  #address-cells = <1>;
  #size-cells = <1>;
 };
};

&sai2 {
 clocks = <&rcc 42>, <&rcc 187>, <&rcc 188>;
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&sai2a_pins_a>, <&sai2b_pins_a>;
 pinctrl-1 = <&sai2a_sleep_pins_a>, <&sai2b_sleep_pins_a>;
 clock-names = "pclk", "x8k", "x11k";
 status = "okay";

 sai2a: audio-controller@4400b004 {
  #clock-cells = <0>;
  dma-names = "tx";
  clocks = <&rcc 159>;
  clock-names = "sai_ck";
  status = "okay";

  sai2a_port: port {
   sai2a_endpoint: endpoint {
    remote-endpoint = <&wm8994_tx_endpoint>;
    format = "i2s";
    mclk-fs = <256>;
   };
  };
 };

 sai2b: audio-controller@4400b024 {
  dma-names = "rx";
  clocks = <&rcc 159>, <&sai2a>;
  clock-names = "sai_ck", "MCLK";
  status = "okay";

  sai2b_port: port {
   sai2b_endpoint: endpoint {
    remote-endpoint = <&wm8994_rx_endpoint>;
    format = "i2s";
    mclk-fs = <256>;
   };
  };
 };
};

&sai4 {
 clocks = <&rcc 50>, <&rcc 187>, <&rcc 188>;
 clock-names = "pclk", "x8k", "x11k";
 status = "okay";

 sai4a: audio-controller@50027004 {
  pinctrl-names = "default", "sleep";
  pinctrl-0 = <&sai4a_pins_a>;
  pinctrl-1 = <&sai4a_sleep_pins_a>;
  dma-names = "tx";
  clocks = <&rcc 161>;
  clock-names = "sai_ck";
  st,iec60958;
  status = "okay";

  sai4a_port: port {
   sai4a_endpoint: endpoint {
    remote-endpoint = <&spdif_out_endpoint>;
   };
  };
 };
};

&sdmmc3 {
 pinctrl-names = "default", "opendrain", "sleep";
 pinctrl-0 = <&sdmmc3_b4_pins_a>;
 pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
 pinctrl-2 = <&sdmmc3_b4_sleep_pins_a>;
 vmmc-supply = <&v3v3>;
 broken-cd;
 st,neg-edge;
 bus-width = <4>;
 status = "disabled";
};

&spdifrx {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&spdifrx_pins_a>;
 pinctrl-1 = <&spdifrx_sleep_pins_a>;
 status = "okay";

 spdifrx_port: port {
  spdifrx_endpoint: endpoint {
   remote-endpoint = <&spdif_in_endpoint>;
  };
 };
};

&spi1 {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&spi1_pins_a>;
 pinctrl-1 = <&spi1_sleep_pins_a>;
 status = "disabled";
};

&timers2 {

 /delete-property/dmas;
 /delete-property/dma-names;
 status = "disabled";
 pwm {
  pinctrl-0 = <&pwm2_pins_a>;
  pinctrl-1 = <&pwm2_sleep_pins_a>;
  pinctrl-names = "default", "sleep";
  status = "okay";
 };
 timer@1 {
  status = "okay";
 };
};

&timers8 {
 /delete-property/dmas;
 /delete-property/dma-names;
 status = "disabled";
 pwm {
  pinctrl-0 = <&pwm8_pins_a>;
  pinctrl-1 = <&pwm8_sleep_pins_a>;
  pinctrl-names = "default", "sleep";
  status = "okay";
 };
 timer@7 {
  status = "okay";
 };
};

&timers12 {
 /delete-property/dmas;
 /delete-property/dma-names;
 status = "disabled";
 pwm {
  pinctrl-0 = <&pwm12_pins_a>;
  pinctrl-1 = <&pwm12_sleep_pins_a>;
  pinctrl-names = "default", "sleep";
  status = "okay";
 };
 timer@11 {
  status = "okay";
 };
};

&usart3 {
 pinctrl-names = "default", "sleep", "idle";
 pinctrl-0 = <&usart3_pins_a>;
 pinctrl-1 = <&usart3_sleep_pins_a>;
 pinctrl-2 = <&usart3_idle_pins_a>;
 uart-has-rtscts;
 status = "disabled";
};

&usbh_ehci {
 phys = <&usbphyc_port0>;
 status = "okay";
};

&usbotg_hs {
 pinctrl-0 = <&usbotg_hs_pins_a>;
 pinctrl-names = "default";
 phys = <&usbphyc_port1 0>;
 phy-names = "usb2-phy";
 status = "okay";
};

&usbphyc {
 status = "okay";
};

&usbphyc_port0 {
 st,phy-tuning = <&usb_phy_tuning>;
};

&usbphyc_port1 {
 st,phy-tuning = <&usb_phy_tuning>;
};
# 10 "arch/arm/dts/.stm32mp157c-ev1.dtb.pre.tmp" 2



/ {
 model = "STMicroelectronics STM32MP157C eval daughter on eval mother";
 compatible = "st,stm32mp157c-ev1", "st,stm32mp157c-ed1", "st,stm32mp157";

 chosen {
  stdout-path = "serial0:115200n8";
 };

 aliases {
  serial1 = &usart3;
  ethernet0 = &ethernet0;
 };
};

&dsi {
 #address-cells = <1>;
 #size-cells = <0>;
 status = "okay";

 ports {
  #address-cells = <1>;
  #size-cells = <0>;

  port@0 {
   reg = <0>;
   dsi_in: endpoint {
    remote-endpoint = <&ltdc_ep0_out>;
   };
  };

  port@1 {
   reg = <1>;
   dsi_out: endpoint {
    remote-endpoint = <&dsi_panel_in>;
   };
  };
 };

 panel_dsi: panel-dsi@0 {
  compatible = "raydium,rm68200";
  reg = <0>;
  reset-gpios = <&gpiof 15 1>;
  backlight = <&panel_backlight>;
  power-supply = <&v3v3>;
  status = "okay";

  port {
   dsi_panel_in: endpoint {
    remote-endpoint = <&dsi_out>;
   };
  };
 };
};

&i2c2 {
 gt9147: goodix_ts@5d {
  compatible = "goodix,gt9147";
  reg = <0x5d>;
  panel = <&panel_dsi>;
  pinctrl-0 = <&goodix_pins>;
  pinctrl-names = "default";
  status = "okay";

  interrupts = <14 1>;
  interrupt-parent = <&stmfx_pinctrl>;
 };
};

&m_can1 {
 pinctrl-names = "default", "sleep";
 pinctrl-0 = <&m_can1_pins_a>;
 pinctrl-1 = <&m_can1_sleep_pins_a>;
 status = "okay";
};
# 1 "arch/arm/dts/stm32mp157c-ev1-u-boot.dtsi" 1





# 1 "arch/arm/dts/stm32mp157a-ev1-u-boot.dtsi" 1





# 1 "arch/arm/dts/stm32mp157c-ed1-u-boot.dtsi" 1





# 1 "arch/arm/dts/stm32mp157a-ed1-u-boot.dtsi" 1





# 1 "./arch/arm/dts/include/dt-bindings/clock/stm32mp1-clksrc.h" 1
# 7 "arch/arm/dts/stm32mp157a-ed1-u-boot.dtsi" 2
# 1 "arch/arm/dts/stm32mp15-u-boot.dtsi" 1





/ {
 aliases {
  gpio0 = &gpioa;
  gpio1 = &gpiob;
  gpio2 = &gpioc;
  gpio3 = &gpiod;
  gpio4 = &gpioe;
  gpio5 = &gpiof;
  gpio6 = &gpiog;
  gpio7 = &gpioh;
  gpio8 = &gpioi;
  gpio9 = &gpioj;
  gpio10 = &gpiok;
  gpio25 = &gpioz;
  pinctrl0 = &pinctrl;
  pinctrl1 = &pinctrl_z;
 };


 psci {
  u-boot,dm-pre-proper;
 };

 soc {
  u-boot,dm-pre-reloc;
 };
};

&bsec {
 u-boot,dm-pre-reloc;
};

&gpioa {
 u-boot,dm-pre-reloc;
};

&gpiob {
 u-boot,dm-pre-reloc;
};

&gpioc {
 u-boot,dm-pre-reloc;
};

&gpiod {
 u-boot,dm-pre-reloc;
};

&gpioe {
 u-boot,dm-pre-reloc;
};

&gpiof {
 u-boot,dm-pre-reloc;
};

&gpiog {
 u-boot,dm-pre-reloc;
};

&gpioh {
 u-boot,dm-pre-reloc;
};

&gpioi {
 u-boot,dm-pre-reloc;
};

&gpioj {
 u-boot,dm-pre-reloc;
};

&gpiok {
 u-boot,dm-pre-reloc;
};

&gpioz {
 u-boot,dm-pre-reloc;
};

&iwdg2 {
 u-boot,dm-pre-reloc;
};


&ltdc {
 u-boot,dm-pre-proper;
};

&pinctrl {
 u-boot,dm-pre-reloc;
};

&pinctrl_z {
 u-boot,dm-pre-reloc;
};

&pwr_regulators {
 u-boot,dm-pre-reloc;
};

&rcc {
 u-boot,dm-pre-reloc;
 #address-cells = <1>;
 #size-cells = <0>;
};


&scmi0 {
 u-boot,dm-pre-reloc;
};

&scmi0_clk {
 u-boot,dm-pre-reloc;
};

&scmi0_mbox {
 u-boot,dm-pre-reloc;
};

&scmi0_reset {
 u-boot,dm-pre-reloc;
};

&scmi0_shm {
 u-boot,dm-pre-reloc;
};

&scmi1 {
 u-boot,dm-pre-reloc;
};

&scmi1_clk {
 u-boot,dm-pre-reloc;
};

&scmi1_mbox {
 u-boot,dm-pre-reloc;
};

&scmi1_shm {
 u-boot,dm-pre-reloc;
};

&scmi_sram {
 u-boot,dm-pre-reloc;
};


&sdmmc1 {
 compatible = "st,stm32-sdmmc2", "arm,pl18x", "arm,primecell";
};

&sdmmc2 {
 compatible = "st,stm32-sdmmc2", "arm,pl18x", "arm,primecell";
};

&sdmmc3 {
 compatible = "st,stm32-sdmmc2", "arm,pl18x", "arm,primecell";
};
# 8 "arch/arm/dts/stm32mp157a-ed1-u-boot.dtsi" 2
# 1 "arch/arm/dts/stm32mp15-ddr3-2x4Gb-1066-binG.dtsi" 1
# 119 "arch/arm/dts/stm32mp15-ddr3-2x4Gb-1066-binG.dtsi"
# 1 "arch/arm/dts/stm32mp15-ddr.dtsi" 1





/ {
 soc {
  ddr: ddr@5a003000 {
   u-boot,dm-pre-reloc;

   compatible = "st,stm32mp1-ddr";

   reg = <0x5A003000 0x550
          0x5A004000 0x234>;

   clocks = <&rcc 228>,
     <&rcc 220>,
     <&rcc 222>,
     <&rcc 224>,
     <&rcc 226>,
     <&rcc 229>;

   clock-names = "axidcg",
          "ddrc1",
          "ddrc2",
          "ddrphyc",
          "ddrcapb",
          "ddrphycapb";

   st,mem-name = "DDR3-DDR3L 32bits 533000Khz";
   st,mem-speed = <533000>;
   st,mem-size = <0x40000000>;
# 156 "arch/arm/dts/stm32mp15-ddr.dtsi"
   status = "okay";
  };
 };
};
# 119 "arch/arm/dts/stm32mp15-ddr3-2x4Gb-1066-binG.dtsi" 2
# 9 "arch/arm/dts/stm32mp157a-ed1-u-boot.dtsi" 2

/ {
 aliases {
  i2c3 = &i2c4;
  mmc0 = &sdmmc1;
  mmc1 = &sdmmc2;
 };

 config {
  u-boot,boot-led = "heartbeat";
  u-boot,error-led = "error";
  u-boot,mmc-env-partition = "ssbl";
  st,fastboot-gpios = <&gpioa 13 1>;
  st,stm32prog-gpios = <&gpioa 14 1>;
 };

 led {
  red {
   label = "error";
   gpios = <&gpioa 13 1>;
   default-state = "off";
   status = "okay";
  };
 };
};
# 193 "arch/arm/dts/stm32mp157a-ed1-u-boot.dtsi"
&uart4 {
 u-boot,dm-pre-reloc;
};

&uart4_pins_a {
 u-boot,dm-pre-reloc;
 pins1 {
  u-boot,dm-pre-reloc;
 };
 pins2 {
  u-boot,dm-pre-reloc;

  bias-pull-up;
 };
};
# 6 "arch/arm/dts/stm32mp157c-ed1-u-boot.dtsi" 2
# 7 "arch/arm/dts/stm32mp157a-ev1-u-boot.dtsi" 2

/ {
 aliases {
  gpio26 = &stmfx_pinctrl;
  i2c1 = &i2c2;
  i2c4 = &i2c5;
  pinctrl2 = &stmfx_pinctrl;
  spi0 = &qspi;
  usb0 = &usbotg_hs;
 };
};
# 66 "arch/arm/dts/stm32mp157a-ev1-u-boot.dtsi"
&usbotg_hs {
 dr_mode = "peripheral";
};
# 6 "arch/arm/dts/stm32mp157c-ev1-u-boot.dtsi" 2
# 87 "arch/arm/dts/.stm32mp157c-ev1.dtb.pre.tmp" 2
